# Chunk 3
arousal <- df |>
ggplot(aes(x=Arousal)) +
geom_histogram(fill="grey", position = "identity", binwidth = 0.5) +
scale_y_sqrt(expand = c(0, 0)) +
scale_x_continuous(breaks = (0:6), labels = c("Not at all", "1", "2", "3", "4", "5", "Very much")) +
labs(title = "Arousal") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
arousal
# Chunk 4
df |>
mutate(ConditionBelief = as.factor(ConditionBelief)) |>
mutate(ConditionBelief = case_when(
ConditionBelief == "False" ~ "Not Believed",
ConditionBelief == "True" ~ "Believed",)) |>
ggplot(aes(x=Arousal, fill=Gender)) +
geom_histogram(position = "identity", binwidth = 0.5) +
facet_grid(Gender~ConditionBelief, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Female"="#E91E63", "Male"="#FF9800", "Other" = "#03A9F4"), guide="none") +
# scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Arousal to images believed or not to be AI-Gnerated") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
# Chunk 6
m_a <- glmmTMB::glmmTMB(Arousal ~ Gender + (1|Participant) + (1|Stimulus ),
data=df,
control = glmmTMB::glmmTMBControl(parallel = 8))
# control = glmmTMB::glmmTMBControl(optimizer=stats::optim, # nlminb, optim
#                                   optArgs = list(method = "BFGS"),  #Nelder-Mead, BFGS, CG
#                                   parallel = 8))
results_table(m_a)
# Chunk 7
estimate_relation(m_a) |>
ggplot(aes(x=Gender, y=Predicted)) +
geom_pointrange(aes(ymin=CI_low, ymax=CI_high, color = Gender), position=position_dodge(width=0.5)) +
scale_color_manual(values=c("Male"="#E91E63", "Female"="#FF9800","Other"="#03A9F4"), guide="none") +  labs(y="Arousal") +
theme_abyss()
# Chunk 8
enticement <- df |>
ggplot(aes(x=Enticing)) +
geom_histogram(fill="grey", position = "identity", binwidth = 0.5) +
scale_y_sqrt(expand = c(0, 0)) +
scale_x_continuous(breaks = (0:6), labels = c("Not at all", "1", "2", "3", "4", "5", "Very much")) +
labs(title = "Enticement") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"),
legend.position = "none")
enticement
# Chunk 9
df |>
mutate(ConditionBelief = as.factor(ConditionBelief)) |>
mutate(ConditionBelief = case_when(
ConditionBelief == "False" ~ "Not Believed",
ConditionBelief == "True" ~ "Believed",)) |>
ggplot(aes(x=Enticing, fill=Gender)) +
geom_histogram(position = "identity", binwidth = 0.5) +
facet_grid(Gender~ConditionBelief, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Female"="#E91E63", "Male"="#FF9800", "Other" = "#03A9F4"), guide="none") +
# scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Enticiment to images believed or not to be AI-Gnerated") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
# Chunk 10
m_e <- glmmTMB::glmmTMB(Enticing ~ Gender + (1|Participant) + (1|Stimulus ),
data=df,
control = glmmTMB::glmmTMBControl(parallel = 8))
# control = glmmTMB::glmmTMBControl(optimizer=stats::optim, # nlminb, optim
#                                   optArgs = list(method = "BFGS"),  #Nelder-Mead, BFGS, CG
#                                   parallel = 8))
results_table(m_e)
# Chunk 11
estimate_relation(m_e) |>
ggplot(aes(x=Gender, y=Predicted)) +
geom_pointrange(aes(ymin=CI_low, ymax=CI_high, color = Gender), position=position_dodge(width=0.5)) +
scale_color_manual(values=c("Male"="#E91E63", "Female"="#FF9800","Other"="#03A9F4"), guide="none") +  labs(y="Arousal") +
theme_abyss()
# Chunk 12
valence <- df |>
ggplot(aes(x=Valence)) +
geom_histogram(fill="grey", position = "identity", binwidth = 0.5) +
scale_y_sqrt(expand = c(0, 0)) +
scale_x_continuous(breaks = (0:6), labels = c("Unpleasant", "1", "2", "3", "4", "5", "Pleasant")) +
labs(title = "Valence") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"),
legend.position = "none")
valence
# Chunk 13
df |>
mutate(ConditionBelief = as.factor(ConditionBelief)) |>
mutate(ConditionBelief = case_when(
ConditionBelief == "False" ~ "Not Believed",
ConditionBelief == "True" ~ "Believed",)) |>
ggplot(aes(x=Valence, fill=Gender)) +
geom_histogram(position = "identity", binwidth = 0.5) +
facet_grid(Gender~ConditionBelief, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Female"="#E91E63", "Male"="#FF9800", "Other" = "#03A9F4"), guide="none") +
# scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Valence to images believed or not to be AI-Gnerated") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
# Chunk 14
m_v <- glmmTMB::glmmTMB(Valence ~ Gender + (1|Participant) + (1|Stimulus ),
data=df,
control = glmmTMB::glmmTMBControl(parallel = 8))
# control = glmmTMB::glmmTMBControl(optimizer=stats::optim, # nlminb, optim
#                                   optArgs = list(method = "BFGS"),  #Nelder-Mead, BFGS, CG
#                                   parallel = 8))
results_table(m_v)
# Chunk 15
estimate_relation(m_e) |>
ggplot(aes(x=Gender, y=Predicted)) +
geom_pointrange(aes(ymin=CI_low, ymax=CI_high, color = Gender), position=position_dodge(width=0.5)) +
scale_color_manual(values=c("Male"="#E91E63", "Female"="#FF9800","Other"="#03A9F4"), guide="none") +  labs(y="Arousal") +
theme_abyss()
# Chunk 16
#| fig-height: 12
#| fig-width: 7
plot_descriptive <- function(df, target="Arousal") {
# By item
order <- df |>
mutate(.Item_Order = paste0(Gender, "_", Stimulus)) |>
summarize(mean = mean(.data[[target]], na.rm=TRUE), .by=c("Condition", ".Item_Order")) |>
arrange(.Item_Order, desc(Condition)) |>
mutate(diff = sign(mean - lag(mean)),
Relevance = str_extract(.Item_Order, "^[^_]+"),
.Item_Order = str_extract(.Item_Order, "(?<=_).+")) |>
filter(Condition == "Photograph") |>
arrange(Relevance, diff, mean)
p1 <- df |>
mutate(.Item_Order = paste0(Gender, "_", Stimulus)) |>
group_by(.Item_Order, Condition) |>
ggdist::mean_qi(.data[[target]], .width=0.95) |>
mutate(Gender = fct_rev(str_extract(.Item_Order, "^[^_]+"))) |>
left_join(order[c(".Item_Order", "diff")], by=".Item_Order") |>
mutate(.Item_Order = fct_relevel(.Item_Order, order$.Item_Order)) |>
# mutate(.average = mean(.data[[target]]), .by="Item") |>
# mutate(Item = fct_reorder(Item, .average)) |>
ggplot(aes(y = .Item_Order, x=.data[[target]])) +
geom_line(aes(color=as.factor(diff)), linewidth=1) +
geom_point(aes(color=Condition), size=2) +
# ggdist::stat_slabinterval(aes(fill=Condition, color=Condition),
#                           .width=0.95, normalize="xy", slab_alpha=0.5) +
# ggdist::stat_histinterval(aes(fill=Condition, color=Condition),
#                           .width=0.95, normalize="xy", slab_alpha=0.5) +
scale_color_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336", "1"="#F44336", "-1"="#2196F3"),
breaks = c('AI-Generated', 'Photograph')) +
# scale_fill_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336")) +
scale_y_discrete(labels = function(x) str_extract(x, "(?<=_).+")) +
theme_minimal() +
theme(panel.grid.minor.x = element_blank(),
# panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.line.x = element_blank()) +
labs(title = paste0(target, " by Item"), color="Condition", y="Items") +
facet_wrap(~Gender, scales="free_y")
# By participant
p2 <- df |>
summarize(.average = mean(.data[[target]]),
.by=c("Gender", "Participant", "Condition")) |>
pivot_wider(names_from = Condition, values_from = .average) |>
mutate(.diff = Photograph - `AI-Generated`) |>
mutate(Participant = fct_reorder(Participant, .diff)) |>
ggplot(aes(x = .diff, y=Participant)) +
geom_bar(aes(fill=.diff), stat = "identity")  +
scale_fill_gradient2(guide="none", low="red", high="red", mid="blue") +
labs(title = paste0(target, " by Participant")) +
facet_wrap(~Gender, ncol=2, scales="free_y") +
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.line.x = element_blank(),
axis.text.y = element_blank()) +
labs(title = paste0(target, " by Participant"), x="Difference (Photograph - AI-Generated)", y="Participants")
p1 / p2 + plot_layout(heights = c(2, 1))
}
# remove other
arousal_desc <- df |>
filter(Gender != "Other") |>
plot_descriptive("Arousal")
arousal_desc
m_arousal <- glmmTMB::glmmTMB(Arousal ~ Gender/ Condition +
(1| Participant) + (1|Stimulus), data=df, control = glmmTMB::glmmTMBControl(parallel = 8))
results_table(m_arousal)
marginaleffects::avg_slopes(m_arousal, variables="Condition", by="Gender", re.form=NA) |>
results_table()
marginaleffects::avg_slopes(m_arousal, variables="Condition", by="Gender", re.form=NA) |>
results_table()
m_arousal
results_table(m_arousal)
m_arousal <- glmmTMB::glmmTMB(Arousal ~ Gender/ Condition +
(1| Participant) + (1|Stimulus), data=df, control = glmmTMB::glmmTMBControl(parallel = 8))
results_table(m_arousal)
# marginaleffects::avg_slopes(m_arousal, variables="Condition", by="Gender", re.form=NA) |>
#   results_table()
levels(df$Condition)
str(df)
dfsub <- read.csv("../data/data_participants.csv")
df <- read.csv("../data/data.csv") |>
right_join(
select(dfsub, Participant, Mobile, starts_with(c("Feedback_","BAIT")), COPS_Frequency_2, SexualActivity,
-Feedback_Text),
by = "Participant"
) |>
mutate(Gender =  fct_relevel(Gender, "Male", "Female", "Other"),
PornFrequency = as.numeric(as.factor(COPS_Frequency_2)),
GenderualActivity_num = as.numeric(as.factor(SexualActivity)),
ConditionBelief = case_when(
Condition == "Reality" & Realness > 0.5 ~ "True",
Condition == "AI-Fiction" & Realness < 0.5 ~ "True",
.default = "False",
)) |>
mutate(Condition = case_when(
Condition == "Fiction" ~ "AI-Generated",
Condition == "Reality" ~ "Photograph",
Condition = fct_relevel(Condition, "AI-Generated", "Photograph")
)) |>
mutate(across(starts_with("Feedback_")& !matches("Feedback_AllRealConfidence|Feedback_AllFakeConfidence|Feedback_Enjoyment"), function(x) {fct_relevel(x, "False", "True")}))
table(df$Realness)
dfsub <- read.csv("../data/data_participants.csv")
df <- read.csv("../data/data.csv") |>
right_join(
select(dfsub, Participant, Mobile, starts_with(c("Feedback_","BAIT")), COPS_Frequency_2, SexualActivity,
-Feedback_Text),
by = "Participant"
) |>
|>
dfsub <- read.csv("../data/data_participants.csv")
df <- read.csv("../data/data.csv") |>
right_join(
select(dfsub, Participant, Mobile, starts_with(c("Feedback_","BAIT")), COPS_Frequency_2, SexualActivity,
-Feedback_Text),
by = "Participant"
) |>
|>
dfsub <- read.csv("../data/data_participants.csv")
df <- read.csv("../data/data.csv") |>
right_join(
select(dfsub, Participant, Mobile, starts_with(c("Feedback_","BAIT")), COPS_Frequency_2, SexualActivity,
-Feedback_Text),
by = "Participant"
) |>
mutate(Condition = case_when(
Condition == "Fiction" ~ "AI-Generated",
Condition == "Reality" ~ "Photograph"
)) |>
mutate(Condition = fct_relevel(Condition, "Photograph", "AI-Generated"),
Gender =  fct_relevel(Gender, "Male", "Female", "Other"),
PornFrequency = as.numeric(as.factor(COPS_Frequency_2)),
GenderualActivity_num = as.numeric(as.factor(SexualActivity)),
ConditionBelief = case_when(
Condition == "Photograph" & Realness > 0 ~ "True",
Condition == "AI-Generated" & Realness < 0 ~ "True",
.default = "False",
)) |>
mutate(across(starts_with("Feedback_")& !matches("Feedback_AllRealConfidence|Feedback_AllFakeConfidence|Feedback_Enjoyment"), function(x) {fct_relevel(x, "False", "True")}))
results_table <- function(model, effects="fixed", filter=NULL) {
if("marginaleffects" %in% class(model)) {
model |>
parameters::parameters() |>
as.data.frame() |>
select(-Parameter, -SE, -S, z=Statistic, -Predicted) |>
insight::format_table() |>
parameters::display()
} else {
display(parameters::parameters(model, effects=effects, keep=filter))
}
}
arousal <- df |>
ggplot(aes(x=Arousal)) +
geom_histogram(fill="grey", position = "identity", binwidth = 0.5) +
scale_y_sqrt(expand = c(0, 0)) +
scale_x_continuous(breaks = (0:6), labels = c("Not at all", "1", "2", "3", "4", "5", "Very much")) +
labs(title = "Arousal") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
arousal
df |>
mutate(ConditionBelief = as.factor(ConditionBelief)) |>
mutate(ConditionBelief = case_when(
ConditionBelief == "False" ~ "Not Believed",
ConditionBelief == "True" ~ "Believed",)) |>
ggplot(aes(x=Arousal, fill=Gender)) +
geom_histogram(position = "identity", binwidth = 0.5) +
facet_grid(Gender~ConditionBelief, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Female"="#E91E63", "Male"="#FF9800", "Other" = "#03A9F4"), guide="none") +
# scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Arousal to images believed or not to be AI-Gnerated") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
arousal <- df |>
ggplot(aes(x=Arousal)) +
geom_histogram(fill="grey", position = "identity", binwidth = 0.5) +
scale_y_sqrt(expand = c(0, 0)) +
scale_x_continuous(breaks = (0:6), labels = c("Not at all", "1", "2", "3", "4", "5", "Very much")) +
labs(title = "Arousal") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
arousal
df |>
mutate(ConditionBelief = as.factor(ConditionBelief)) |>
mutate(ConditionBelief = case_when(
ConditionBelief == "False" ~ "Not Believed",
ConditionBelief == "True" ~ "Believed",)) |>
ggplot(aes(x=Arousal, fill=Gender)) +
geom_histogram(position = "identity", binwidth = 0.5) +
facet_grid(Gender~ConditionBelief, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Female"="#E91E63", "Male"="#FF9800", "Other" = "#03A9F4"), guide="none") +
# scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Arousal to images believed or not to be AI-Gnerated") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
#| eval: false
# Get a sense of Random Factors
m1 <- glmmTMB::glmmTMB(Arousal ~ Gender + (1|Participant), data=df)
m2 <- glmmTMB::glmmTMB(Arousal ~ Gender + (1|Participant) + (1|Stimulus ), data=df)
m3 <- glmmTMB::glmmTMB(Arousal ~ Gender + (1|Participant) + (1+Gender|Stimulus ), data=df)
test_bf(m1,m2)
compare_performance(m1, m2)
# the model with participants and stimuli as random effecs seems to be the best
m_a <- glmmTMB::glmmTMB(Arousal ~ Gender + (1|Participant),
data=df,
control = glmmTMB::glmmTMBControl(parallel = 8))
# control = glmmTMB::glmmTMBControl(optimizer=stats::optim, # nlminb, optim
#                                   optArgs = list(method = "BFGS"),  #Nelder-Mead, BFGS, CG
#                                   parallel = 8))
results_table(m_a)
estimate_relation(m_a) |>
ggplot(aes(x=Gender, y=Predicted)) +
geom_pointrange(aes(ymin=CI_low, ymax=CI_high, color = Gender), position=position_dodge(width=0.5)) +
scale_color_manual(values=c("Male"="#E91E63", "Female"="#FF9800","Other"="#03A9F4"), guide="none") +  labs(y="Arousal") +
theme_abyss()
enticement <- df |>
ggplot(aes(x=Enticing)) +
geom_histogram(fill="grey", position = "identity", binwidth = 0.5) +
scale_y_sqrt(expand = c(0, 0)) +
scale_x_continuous(breaks = (0:6), labels = c("Not at all", "1", "2", "3", "4", "5", "Very much")) +
labs(title = "Enticement") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"),
legend.position = "none")
enticement
df |>
mutate(ConditionBelief = as.factor(ConditionBelief)) |>
mutate(ConditionBelief = case_when(
ConditionBelief == "False" ~ "Not Believed",
ConditionBelief == "True" ~ "Believed",)) |>
ggplot(aes(x=Enticing, fill=Gender)) +
geom_histogram(position = "identity", binwidth = 0.5) +
facet_grid(Gender~ConditionBelief, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Female"="#E91E63", "Male"="#FF9800", "Other" = "#03A9F4"), guide="none") +
# scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Enticiment to images believed or not to be AI-Gnerated") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
df |>
mutate(ConditionBelief = as.factor(ConditionBelief)) |>
mutate(ConditionBelief = case_when(
ConditionBelief == "False" ~ "Not Believed",
ConditionBelief == "True" ~ "Believed",)) |>
ggplot(aes(x=Enticing, fill=Gender)) +
geom_histogram(position = "identity", binwidth = 0.5) +
facet_grid(Gender~ConditionBelief, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Female"="#E91E63", "Male"="#FF9800", "Other" = "#03A9F4"), guide="none") +
# scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Enticiment to images believed or not to be AI-Gnerated") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
m_e <- glmmTMB::glmmTMB(Enticing ~ Gender + (1|Participant) + (1|Stimulus ),
data=df,
control = glmmTMB::glmmTMBControl(parallel = 8))
# control = glmmTMB::glmmTMBControl(optimizer=stats::optim, # nlminb, optim
#                                   optArgs = list(method = "BFGS"),  #Nelder-Mead, BFGS, CG
#                                   parallel = 8))
results_table(m_e)
m_e <- glmmTMB::glmmTMB(Enticing ~ Gender + (1|Participant),
data=df,
control = glmmTMB::glmmTMBControl(parallel = 8))
# control = glmmTMB::glmmTMBControl(optimizer=stats::optim, # nlminb, optim
#                                   optArgs = list(method = "BFGS"),  #Nelder-Mead, BFGS, CG
#                                   parallel = 8))
results_table(m_e)
valence <- df |>
ggplot(aes(x=Valence)) +
geom_histogram(fill="grey", position = "identity", binwidth = 0.5) +
scale_y_sqrt(expand = c(0, 0)) +
scale_x_continuous(breaks = (0:6), labels = c("Unpleasant", "1", "2", "3", "4", "5", "Pleasant")) +
labs(title = "Valence") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"),
legend.position = "none")
valence
df |>
mutate(ConditionBelief = as.factor(ConditionBelief)) |>
mutate(ConditionBelief = case_when(
ConditionBelief == "False" ~ "Not Believed",
ConditionBelief == "True" ~ "Believed",)) |>
ggplot(aes(x=Valence, fill=Gender)) +
geom_histogram(position = "identity", binwidth = 0.5) +
facet_grid(Gender~ConditionBelief, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Female"="#E91E63", "Male"="#FF9800", "Other" = "#03A9F4"), guide="none") +
# scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Valence to images believed or not to be AI-Gnerated") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
m_v <- glmmTMB::glmmTMB(Valence ~ Gender + (1|Participant),
data=df,
control = glmmTMB::glmmTMBControl(parallel = 8))
# control = glmmTMB::glmmTMBControl(optimizer=stats::optim, # nlminb, optim
#                                   optArgs = list(method = "BFGS"),  #Nelder-Mead, BFGS, CG
#                                   parallel = 8))
results_table(m_v)
#| fig-height: 12
#| fig-width: 7
plot_descriptive <- function(df, target="Arousal") {
# By item
order <- df |>
mutate(.Item_Order = paste0(Gender, "_", Stimulus)) |>
summarize(mean = mean(.data[[target]], na.rm=TRUE), .by=c("Condition", ".Item_Order")) |>
arrange(.Item_Order, desc(Condition)) |>
mutate(diff = sign(mean - lag(mean)),
Relevance = str_extract(.Item_Order, "^[^_]+"),
.Item_Order = str_extract(.Item_Order, "(?<=_).+")) |>
filter(Condition == "Photograph") |>
arrange(Relevance, diff, mean)
p1 <- df |>
mutate(.Item_Order = paste0(Gender, "_", Stimulus)) |>
group_by(.Item_Order, Condition) |>
ggdist::mean_qi(.data[[target]], .width=0.95) |>
mutate(Gender = fct_rev(str_extract(.Item_Order, "^[^_]+"))) |>
left_join(order[c(".Item_Order", "diff")], by=".Item_Order") |>
mutate(.Item_Order = fct_relevel(.Item_Order, order$.Item_Order)) |>
# mutate(.average = mean(.data[[target]]), .by="Item") |>
# mutate(Item = fct_reorder(Item, .average)) |>
ggplot(aes(y = .Item_Order, x=.data[[target]])) +
geom_line(aes(color=as.factor(diff)), linewidth=1) +
geom_point(aes(color=Condition), size=2) +
# ggdist::stat_slabinterval(aes(fill=Condition, color=Condition),
#                           .width=0.95, normalize="xy", slab_alpha=0.5) +
# ggdist::stat_histinterval(aes(fill=Condition, color=Condition),
#                           .width=0.95, normalize="xy", slab_alpha=0.5) +
scale_color_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336", "1"="#F44336", "-1"="#2196F3"),
breaks = c('AI-Generated', 'Photograph')) +
# scale_fill_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336")) +
scale_y_discrete(labels = function(x) str_extract(x, "(?<=_).+")) +
theme_minimal() +
theme(panel.grid.minor.x = element_blank(),
# panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.line.x = element_blank()) +
labs(title = paste0(target, " by Item"), color="Condition", y="Items") +
facet_wrap(~Gender, scales="free_y")
# By participant
p2 <- df |>
summarize(.average = mean(.data[[target]]),
.by=c("Gender", "Participant", "Condition")) |>
pivot_wider(names_from = Condition, values_from = .average) |>
mutate(.diff = Photograph - `AI-Generated`) |>
mutate(Participant = fct_reorder(Participant, .diff)) |>
ggplot(aes(x = .diff, y=Participant)) +
geom_bar(aes(fill=.diff), stat = "identity")  +
scale_fill_gradient2(guide="none", low="red", high="red", mid="blue") +
labs(title = paste0(target, " by Participant")) +
facet_wrap(~Gender, ncol=2, scales="free_y") +
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.line.x = element_blank(),
axis.text.y = element_blank()) +
labs(title = paste0(target, " by Participant"), x="Difference (Photograph - AI-Generated)", y="Participants")
p1 / p2 + plot_layout(heights = c(2, 1))
}
# remove other
arousal_desc <- df |>
filter(Gender != "Other") |>
plot_descriptive("Arousal")
arousal_desc
m_arousal <- glmmTMB::glmmTMB(Arousal ~ Gender/ Condition +
(1| Participant) + (1|Stimulus), data=df, control = glmmTMB::glmmTMBControl(parallel = 8))
results_table(m_arousal)
# marginaleffects::avg_slopes(m_arousal, variables="Condition", by="Gender", re.form=NA) |>
#   results_table()
m_arousal <- glmmTMB::glmmTMB(Arousal ~ Gender/ Condition +
(1| Participant) + (1|Stimulus), data=df, control = glmmTMB::glmmTMBControl(parallel = 8))
results_table(m_arousal)
# marginaleffects::avg_slopes(m_arousal, variables="Condition", by="Gender", re.form=NA) |>
#   results_table()
m_a <- glmmTMB::glmmTMB(Arousal ~ Gender + (1|Participant),
data=df, family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
?glmTMB
??glmmTMB::glmmTMB
?glmmTMB::glmmTMB
arousal <- df |>
ggplot(aes(x=Arousal)) +
geom_histogram(fill="grey", position = "identity", binwidth = 0.5) +
scale_y_sqrt(expand = c(0, 0)) +
scale_x_continuous(breaks = (0:6), labels = c("Not at all", "1", "2", "3", "4", "5", "Very much")) +
labs(title = "Arousal") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
arousal
?glmmTMB::glmmTMB
