setwd("C:/Users/aneve/OneDrive - University of Sussex/PHD STUFF/projects/FictionEro/analysis")
#| message: false
#| warning: false
library(tidyverse)
library(easystats)
library(patchwork)
library(ggside)
library(glmmTMB)
options(mc.cores = parallel::detectCores(),
brms.backend = "cmdstanr",
width = 300)
dfsub <- read.csv("../data/data_participants.csv")
df <- read.csv("../data/data.csv") |>
right_join(
select(dfsub, Participant, Sample, Language, Mobile, starts_with("Feedback_"),
BAIT_Visual, BAIT_Text, AI_Knowledge, SexualActivity,
GAAIS_Negative, GAAIS_Positive, Porn, COPS_Frequency_2,
-Feedback_Comments),
by = "Participant"
) |>
datawizard::rescale(select=c("Valence"), range=c(-1, 1), to=c(0, 1)) |>
mutate(Condition = fct_relevel(Condition, "Photograph", "AI-Generated"),
Relevance =  fct_relevel(Relevance, "Relevant", "Irrelevant", "Non-erotic"),
Sex =  fct_relevel(Sex, "Male", "Female"),
PornFrequency = as.numeric(as.factor(COPS_Frequency_2)),
SexualActivity_num = as.numeric(as.factor(SexualActivity)),
ConditionBelief = case_when(
Condition == "Photograph" & Realness > 0.5 ~ "True",
Condition == "AI-Generated" & Realness < 0.5 ~ "True",
.default = "False"
),
RealnessBelief = ifelse(Realness > 0.5, 1, 0)) |>
mutate(across(starts_with("Feedback_"), function(x) {fct_relevel(x, "False", "True")}))
results_table <- function(model, effects="fixed", filter=NULL) {
if("marginaleffects" %in% class(model)) {
model |>
parameters::parameters() |>
as.data.frame() |>
select(-Parameter, -SE, -S, z=Statistic, -Predicted) |>
insight::format_table() |>
parameters::display()
} else {
display(parameters::parameters(model, effects=effects, keep=filter))
}
}
View(df)
df |>
mutate(Realness_Extreme = ifelse(Realness %in% c(0, 1), "Extreme", "Not extreme")) |>
ggplot(aes(x=Realness, fill=Relevance)) +
geom_histogram(aes(color=Realness_Extreme), position = "identity", bins=80) +
facet_grid(Relevance~Sex, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Relevant"="#E91E63", "Irrelevant"="#FF9800", "Non-erotic"="#03A9F4"), guide="none") +
scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Realness") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
make_model <- function(f, family=glmmTMB::ordbeta()) {
m <- glmmTMB::glmmTMB(as.formula(f),
data=df,
family=family,
control = glmmTMB::glmmTMBControl(parallel = 8))
print(results_table(m))
m
}
m <- make_model("Realness ~ Entropy + (1|Participant) + (1|Item)", family=glmmTMB::ordbeta())
m <- make_model("RealnessBelief ~ Entropy + (1|Participant) + (1|Item)", family="binomial")
m <- make_model("Realness ~ Complexity + (1|Participant) + (1|Item)", family=glmmTMB::ordbeta())
m <- make_model("RealnessBelief ~ Complexity + (1|Participant) + (1|Item)", family="binomial")
m <- make_model("Realness ~ Contrast + (1|Participant) + (1|Item)", family=glmmTMB::ordbeta())
m <- make_model("RealnessBelief ~ Contrast + (1|Participant) + (1|Item)", family="binomial")
m <- make_model("Realness ~ Luminance + (1|Participant) + (1|Item)", family=glmmTMB::ordbeta())
m <- make_model("RealnessBelief ~ Luminance + (1|Participant) + (1|Item)", family="binomial")
levels(RealnessBelief)
str(df$RealnessBelief)
levels(df$RealnessBelief)
m <- make_model("Realness ~ Sex / (Relevance / Condition) +
(Relevance|Participant) + (1|Item)",
family=glmmTMB::ordbeta())
predbeta <- estimate_relation(m, length=20)
m <- make_model("RealnessBelief ~ Sex / (Relevance / Condition) +
(Relevance|Participant) + (1|Item)",
family="binomial")
predbeta |>
ggplot(aes(x=Relevance, y=Predicted)) +
geom_pointrange(aes(ymin=CI_low, ymax=CI_high, color=Condition), position = position_dodge(width=0.2)) +
facet_grid(~Sex)
test_moderator <- function(df, moderator="BAIT_Visual") {
f <- paste0("Realness ~ Sex / (Relevance / Condition * ", moderator, ") + (Relevance | Participant) + (1|Item)")
r <- glmmTMB::glmmTMB(as.formula(f),
data=df,
family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8)) |>
parameters::parameters() |>
as.data.frame() |>
select(-df_error, -Effects, -Group, -Component, -SE)
r$Moderator <- moderator
insight::format_table(filter(r, str_detect(Parameter, moderator)))
}
moderator <- data.frame()
for(m in c("BAIT_Visual", "BAIT_Text", "AI_Knowledge",
"GAAIS_Positive", "GAAIS_Negative")) {
moderator <- rbind(moderator, test_moderator(df, m))
}
display(filter(moderator, p < .05))
levels(Sex)
levels(df$Sex)
df |>
mutate(Realness_Extreme = ifelse(Realness %in% c(0, 1), "Extreme", "Not extreme")) |>
ggplot(aes(x=Realness, fill=Relevance)) +
geom_histogram(aes(color=Realness_Extreme), position = "identity", bins=80) +
facet_grid(Relevance~Sex, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Relevant"="#E91E63", "Irrelevant"="#FF9800", "Non-erotic"="#03A9F4"), guide="none") +
scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Realness") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
m <- make_model("Realness ~ Sex / (Relevance / Condition) +
(Relevance|Participant) + (1|Item)",
family=glmmTMB::ordbeta())
predbeta <- estimate_relation(m, length=20)
predbeta |>
ggplot(aes(x=Relevance, y=Predicted)) +
geom_pointrange(aes(ymin=CI_low, ymax=CI_high, color=Condition), position = position_dodge(width=0.2)) +
facet_grid(~Sex)
levels(df$Relevance)
levels(df$Sex)
levels(df$Condition)
predbin
m <- make_model("RealnessBelief ~ Sex / (Relevance / Condition) +
(Relevance|Participant) + (1|Item)",
family="binomial")
predbin <- estimate_relation(m, length=20)
test_moderator <- function(df, moderator="BAIT_Visual") {
f <- paste0("Realness ~ Sex / (Relevance / Condition * ", moderator, ") + (Relevance | Participant) + (1|Item)")
r <- glmmTMB::glmmTMB(as.formula(f),
data=df,
family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8)) |>
parameters::parameters() |>
as.data.frame() |>
select(-df_error, -Effects, -Group, -Component, -SE)
r$Moderator <- moderator
insight::format_table(filter(r, str_detect(Parameter, moderator)))
}
moderator <- data.frame()
for(m in c("BAIT_Visual", "BAIT_Text", "AI_Knowledge",
"GAAIS_Positive", "GAAIS_Negative")) {
moderator <- rbind(moderator, test_moderator(df, m))
}
display(filter(moderator, p < .05))
display(filter(moderator, p < .05))
moderator
```{r}
test_moderator <- function(df, moderator="BAIT_Visual") {
f <- paste0("Realness ~ Sex / (Relevance / Condition * ", moderator, ") + (Relevance | Participant) + (1|Item)")
r <- glmmTMB::glmmTMB(as.formula(f),
data=df,
family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8)) |>
parameters::parameters() |>
as.data.frame() |>
select(-df_error, -Effects, -Group, -Component, -SE)
r$Moderator <- moderator
insight::format_table(filter(r, str_detect(Parameter, moderator)))
}
moderator <- data.frame()
for(m in c("BAIT_Visual", "BAIT_Text", "AI_Knowledge",
"GAAIS_Positive", "GAAIS_Negative")) {
moderator <- rbind(moderator, test_moderator(df, m))
}
display(filter(moderator, p < .05))
test_moderator <- function(df, moderator="BAIT_Visual") {
f <- paste0("Realness ~ Sex / (Relevance / Condition * ", moderator, ") + (Relevance | Participant) + (1|Item)")
r <- glmmTMB::glmmTMB(as.formula(f),
data=df,
family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8)) |>
parameters::parameters() |>
as.data.frame() |>
select(-df_error, -Effects, -Group, -Component, -SE)
r$Moderator <- moderator
insight::format_table(filter(r, str_detect(Parameter, moderator)))
}
moderator <- data.frame()
for(m in c("BAIT_Visual", "BAIT_Text", "AI_Knowledge",
"GAAIS_Positive", "GAAIS_Negative")) {
moderator <- rbind(moderator, test_moderator(df, m))
}
display(filter(moderator, p < .05))
display(filter(moderator, p < .05))
str(df$Feedback_AILessArousing)
View(df)
levels(df$BAIT_Visual)
m1 <- glmmTMB::glmmTMB(Realness ~ Sex /
(Relevance / Condition *  BAIT_Visual) +
(Relevance | Participant) + (1|Item),
data=df,
family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
summary(m1)
stars1 <- data.frame(Sex = as.factor(c("Male", "Male", "Female", "Female")),
Condition=c("Photograph", "AI-Generated", "Photograph", "AI-Generated"),
label=c("***", "***", "***", "***"),
x=c(0.6, 0.6, 0.65, 0.65),
y=c(0.8, 0.6, 0.72, 0.55))
pred1 <- estimate_relation(m1)
p1 <- pred1 |>
filter(Relevance == "Relevant") |>
ggplot(aes(x=BAIT_Visual, y=Predicted)) +
geom_ribbon(aes(ymin=CI_low, ymax=CI_high, fill=Condition), alpha=0.3) +
geom_line(aes(color=Condition), linewidth=1, key_glyph = draw_key_rect) +
geom_text(data=stars1, aes(x=x, y=y, label=label, color=Condition), hjust=0.5, size=3) +
geom_text(data=data.frame(Sex=as.factor("Female"), x=0.65, y=0.638, label="**"), aes(x=x, y=y, label=label), hjust=0.5, color="#424242", size=3) +
facet_grid(~Sex) +
scale_y_continuous(labels=scales::percent) +
scale_color_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336")) +
scale_fill_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336"), guide="none") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8),
strip.placement = "outside",
strip.background.x = element_rect(fill=c("lightgrey"), color=NA),
strip.text.x = element_text(size = 10),
strip.text.y = element_text(size = 10),
axis.text.x = element_text(size=9, color="black"),
legend.text = element_text(size = 10)) +
labs(y="Realness\n", fill="Images presented as:", color="Images presented as:",
x = "\nBeliefs about Artificial Information Technology (BAIT)\n'AI algorithms can generate realistic images'",
tag = "A")
p1
moderator <- data.frame()
for(m in c("Porn", "PornFrequency", "SexualActivity_num")) {
moderator <- rbind(moderator, test_moderator(df, m))
}
display(filter(moderator, p < .05))
moderator <- data.frame()
for(m in c("Feedback_CouldDiscriminate", "Feedback_CouldNotDiscriminate",
"Feedback_AIMoreArousing", "Feedback_AILessArousing",
"Feedback_LabelsIncorrect", "Feedback_LabelsReversed")) {
moderator <- rbind(moderator, test_moderator(df, m))
}
display(filter(moderator, p < .05))
m2 <- glmmTMB::glmmTMB(Realness ~ Sex /
(Relevance / Feedback_CouldNotDiscriminate / Condition) +
(Relevance | Participant) + (1|Item),
data=df,
family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
summary(m2)
stars2 <- data.frame(Sex = as.factor(c("Male", "Male", "Female", "Female")),
Condition=c("Photograph", "AI-Generated", "Photograph", "AI-Generated"),
label=c("***", "***", "***", "***"),
x=c(1.4, 1.6, 1.4, 1.6),
y=c(0.79, 0.72, 0.69, 0.63))
stars3 <- data.frame(Sex = as.factor(c("Male", "Male", "Female")),
label=c("***", "***", "***"),
x=c(1.1, 1.8, 1.15),
y=c(0.71, 0.80, 0.615))
pred2 <- estimate_relation(m2)
p2 <- pred2 |>
filter(Relevance == "Relevant") |>
ggplot(aes(x=Feedback_CouldNotDiscriminate, y=Predicted)) +
geom_line(aes(color=Condition, group=Condition), linewidth=.3, position = position_dodge(width=0.2), key_glyph = "path") +
geom_pointrange(aes(ymin=CI_low, ymax=CI_high, color=Condition), position = position_dodge(width=0.2), size=0.8, linewidth=1, key_glyph = "blank") +
geom_text(data=stars2, aes(x=x, y=y, label=label, color=Condition), hjust=0.5, key_glyph = "blank", size=3) +
geom_text(data=stars3, aes(x=x, y=y, label=label), hjust=0.5, color="#424242", size=3) +
guides(color=guide_legend(override.aes = list(linewidth = 1.5))) +
facet_grid(~Sex) +
scale_y_continuous(labels=scales::percent) +
scale_color_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336")) +
theme_minimal() +
theme(axis.text.y = element_text(size = 8),
strip.placement = "outside",
strip.background.x = element_rect(fill=c("lightgrey"), color=NA),
strip.text.x = element_text(size = 10),
strip.text.y = element_text(size = 10),
axis.text.x = element_text(size=9, color="black"),
legend.text = element_text(size = 10)) +
labs(y="Realness\n", fill="Images presented as:", color="Images presented as:",
x = "\n'Could not discriminate AI-generated and real' Feedback",
tag = "B")
p2
test_moderator <- function(df, moderator="BAIT_Visual") {
f <- paste0("Realness ~ Sex / (Relevance / Condition * ", moderator, ") + (Relevance | Participant) + (1|Item)")
r <- glmmTMB::glmmTMB(as.formula(f),
data=df,
family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8)) |>
parameters::parameters() |>
as.data.frame() |>
select(-df_error, -Effects, -Group, -Component, -SE)
r$Moderator <- moderator
insight::format_table(filter(r, str_detect(Parameter, moderator)))
}
moderator <- data.frame()
for(m in c("BAIT_Visual", "BAIT_Text", "AI_Knowledge",
"GAAIS_Positive", "GAAIS_Negative")) {
moderator <- rbind(moderator, test_moderator(df, m))
}
display(filter(moderator, p < .05))
levels(df$Sex)
levels(df$Condition)
levels(df$Relevance)
m1 <- glmmTMB::glmmTMB(Realness ~ Sex /
(Relevance / Condition *  BAIT_Visual) +
(Relevance | Participant) + (1|Item),
data=df,
family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
summary(m1)
pred1 <- estimate_relation(m1)
p1 <- pred1 |>
filter(Relevance == "Relevant") |>
ggplot(aes(x=BAIT_Visual, y=Predicted)) +
geom_ribbon(aes(ymin=CI_low, ymax=CI_high, fill=Condition), alpha=0.3) +
geom_line(aes(color=Condition), linewidth=1, key_glyph = draw_key_rect) +
geom_text(data=stars1, aes(x=x, y=y, label=label, color=Condition), hjust=0.5, size=3) +
geom_text(data=data.frame(Sex=as.factor("Female"), x=0.65, y=0.638, label="**"), aes(x=x, y=y, label=label), hjust=0.5, color="#424242", size=3) +
facet_grid(~Sex) +
scale_y_continuous(labels=scales::percent) +
scale_color_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336")) +
scale_fill_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336"), guide="none") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8),
strip.placement = "outside",
strip.background.x = element_rect(fill=c("lightgrey"), color=NA),
strip.text.x = element_text(size = 10),
strip.text.y = element_text(size = 10),
axis.text.x = element_text(size=9, color="black"),
legend.text = element_text(size = 10)) +
labs(y="Realness\n", fill="Images presented as:", color="Images presented as:",
x = "\nBeliefs about Artificial Information Technology (BAIT)\n'AI algorithms can generate realistic images'",
tag = "A")
p1
moderator <- data.frame()
for(m in c("Porn", "PornFrequency", "SexualActivity_num")) {
moderator <- rbind(moderator, test_moderator(df, m))
}
display(filter(moderator, p < .05))
df$Porn
m
moderator <- data.frame()
for(m in c("Feedback_CouldDiscriminate", "Feedback_CouldNotDiscriminate",
"Feedback_AIMoreArousing", "Feedback_AILessArousing",
"Feedback_LabelsIncorrect", "Feedback_LabelsReversed")) {
moderator <- rbind(moderator, test_moderator(df, m))
}
display(filter(moderator, p < .05))
m2 <- glmmTMB::glmmTMB(Realness ~ Sex /
(Relevance / Feedback_CouldNotDiscriminate / Condition) +
(Relevance | Participant) + (1|Item),
data=df,
family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
summary(m2)
stars2 <- data.frame(Sex = as.factor(c("Male", "Male", "Female", "Female")),
Condition=c("Photograph", "AI-Generated", "Photograph", "AI-Generated"),
label=c("***", "***", "***", "***"),
x=c(1.4, 1.6, 1.4, 1.6),
y=c(0.79, 0.72, 0.69, 0.63))
stars3 <- data.frame(Sex = as.factor(c("Male", "Male", "Female")),
label=c("***", "***", "***"),
x=c(1.1, 1.8, 1.15),
y=c(0.71, 0.80, 0.615))
pred2 <- estimate_relation(m2)
p2 <- pred2 |>
filter(Relevance == "Relevant") |>
ggplot(aes(x=Feedback_CouldNotDiscriminate, y=Predicted)) +
geom_line(aes(color=Condition, group=Condition), linewidth=.3, position = position_dodge(width=0.2), key_glyph = "path") +
geom_pointrange(aes(ymin=CI_low, ymax=CI_high, color=Condition), position = position_dodge(width=0.2), size=0.8, linewidth=1, key_glyph = "blank") +
geom_text(data=stars2, aes(x=x, y=y, label=label, color=Condition), hjust=0.5, key_glyph = "blank", size=3) +
geom_text(data=stars3, aes(x=x, y=y, label=label), hjust=0.5, color="#424242", size=3) +
guides(color=guide_legend(override.aes = list(linewidth = 1.5))) +
facet_grid(~Sex) +
scale_y_continuous(labels=scales::percent) +
scale_color_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336")) +
theme_minimal() +
theme(axis.text.y = element_text(size = 8),
strip.placement = "outside",
strip.background.x = element_rect(fill=c("lightgrey"), color=NA),
strip.text.x = element_text(size = 10),
strip.text.y = element_text(size = 10),
axis.text.x = element_text(size=9, color="black"),
legend.text = element_text(size = 10)) +
labs(y="Realness\n", fill="Images presented as:", color="Images presented as:",
x = "\n'Could not discriminate AI-generated and real' Feedback",
tag = "B")
p2
p <- (p1 + theme(legend.position = "none")) / p2  + plot_layout(guides = "collect")
ggsave("figures/figure2.png", p, width=8, height=8, dpi=300)
p
df |>
mutate(Realness_Extreme = ifelse(Realness %in% c(0, 1), "Extreme", "Not extreme")) |>
ggplot(aes(x=Realness, fill=Relevance)) +
geom_histogram(aes(color=Realness_Extreme), position = "identity", bins=80) +
facet_grid(Relevance~Sex, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Relevant"="#E91E63", "Irrelevant"="#FF9800", "Non-erotic"="#03A9F4"), guide="none") +
scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Realness") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
setwd("C:/Users/aneve/OneDrive - University of Sussex/PHD STUFF/projects/FictionEro/analysis")
| message: false
library(tidyverse)
library(easystats)
library(patchwork)
library(ggside)
library(glmmTMB)
options(mc.cores = parallel::detectCores(),
brms.backend = "cmdstanr",
width = 300)
#| message: false
#| warning: false
library(tidyverse)
library(easystats)
library(patchwork)
library(ggside)
library(glmmTMB)
options(mc.cores = parallel::detectCores(),
brms.backend = "cmdstanr",
width = 300)
dfsub <- read.csv("../data/data_participants.csv")
df <- read.csv("../data/data.csv") |>
right_join(
select(dfsub, Participant, Sample, Language, Mobile, starts_with("Feedback_"),
BAIT_Visual, BAIT_Text, AI_Knowledge, SexualActivity,
GAAIS_Negative, GAAIS_Positive, Porn, COPS_Frequency_2,
Screen_Size,
-Feedback_Comments),
by = "Participant"
) |>
datawizard::rescale(select=c("Valence"), range=c(-1, 1), to=c(0, 1)) |>
mutate(Condition = fct_relevel(Condition, "Photograph", "AI-Generated"),
Relevance =  fct_relevel(Relevance, "Relevant", "Irrelevant", "Non-erotic"),
Sex =  fct_relevel(Sex, "Male", "Female"),
PornFrequency = as.numeric(as.factor(COPS_Frequency_2)),
SexualActivity_num = as.numeric(as.factor(SexualActivity)),
ConditionBelief = case_when(
Condition == "Photograph" & Realness > 0.5 ~ "True",
Condition == "AI-Generated" & Realness < 0.5 ~ "True",
.default = "False"
)) |>
mutate(across(starts_with("Feedback_"), function(x) {fct_relevel(x, "False", "True")}))
results_table <- function(model, effects="fixed", filter=NULL) {
if("marginaleffects" %in% class(model)) {
model |>
parameters::parameters() |>
as.data.frame() |>
select(-Parameter, -SE, -S, z=Statistic, -Predicted) |>
insight::format_table() |>
parameters::display()
} else {
display(parameters::parameters(model, effects=effects, keep=filter))
}
}
df |>
mutate(Arousal_Extreme = ifelse(Arousal %in% c(0, 1), "Extreme", "Not extreme")) |>
ggplot(aes(x=Arousal, fill=Relevance)) +
geom_histogram(aes(color=Arousal_Extreme), position = "identity", bins=80) +
facet_grid(Relevance~Sex, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Relevant"="#E91E63", "Irrelevant"="#FF9800", "Non-erotic"="#03A9F4"), guide="none") +
scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Arousal") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
