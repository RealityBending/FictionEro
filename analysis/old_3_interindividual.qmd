---
title: "FictionEro - Analysis (2)"
editor: source
editor_options: 
  chunk_output_type: console
format:
  html:
    code-fold: true
    self-contained: true
    toc: true
---

## Data Preparation

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(easystats)
library(patchwork)
library(ggside)
library(glmmTMB)
library(lavaan)
```


```{r}
dfsub <- read.csv("../data/data_participants.csv")
df <- read.csv("../data/data.csv") |> 
  full_join(
    dfsub[c("Participant", "Experimenter", "Feedback_LabelsIncorrect")],
    by = join_by(Participant)
    ) |> 
  datawizard::rescale(select=c("Arousal", "Enticement", "Realness"), range=c(0, 1), to=c(0.001, 0.999)) |> 
  datawizard::rescale(select=c("Valence"), range=c(-1, 1), to=c(0.001, 0.999)) |> 
  mutate(Condition = fct_relevel(Condition, "Photograph", "AI-Generated"),
         Relevance =  fct_relevel(Relevance, "Relevant", "Irrelevant", "Non-erotic")) 
```

## Belief in the Instructions

```{r}
m <- glmmTMB::glmmTMB(Arousal ~ Sex / (Relevance / (Condition * Feedback_LabelsIncorrect)) + 
                        (1|Participant) + (1|Item), 
                      data=df,
                      family = glmmTMB::beta_family(link = "logit"),
                      )
results_table(m)

m <- lm(Arousal ~ Sex / (Relevance / (Condition * Feedback_LabelsIncorrect)), data=df)

marginal <- marginaleffects::slopes(
  m, 
  newdata=insight::get_datagrid(m, at=c("Sex", "Relevance", "Feedback_LabelsIncorrect")),
  variables="Condition") 

marginal |> 
  as.data.frame() |> 
  mutate_at(vars(estimate, conf.low, conf.high), \(x) -1*x) |>
  ggplot(aes(x=Relevance, y=estimate, color=Feedback_LabelsIncorrect)) +
  geom_line(aes(group=Feedback_LabelsIncorrect)) +
  geom_pointrange(aes(ymin = conf.low, ymax=conf.high)) +
  facet_grid(~Sex) +
  labs(y = "Reality - Fiction")
```


## Realness

```{r}
m <- brms::brm(Realness ~ Relevance / (Condition * BAIT) + (1|Participant) + (1|Item), data=df, algorithm = "meanfield")
results_table(m)


pred <- marginaleffects::predictions(m, newdata = insight::get_datagrid(m), re_formula = NULL) |> 
  as.data.frame() 

pred |> 
  ggplot(aes(x=BAIT, y=estimate, )) +
  # geom_ribbon(aes(ymin = conf.low, ymax=conf.high, fill=Relevance, group=interaction(Condition, Relevance)), alpha=0.2) +
  geom_line(aes(linetype=Condition, color=Relevance))
```


