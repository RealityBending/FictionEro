Question = str_replace(Question, "AllFake", "All images were AI-generated"),
Question = str_replace(Question, "DiffObvious", "Obvious differences between AI images and photos"),
Question = str_replace(Question, "LabelsReversed", "Labels were reversed")) |>
mutate(Question = fct_reorder(Question, desc(prop))) |>
ggplot(aes(x = Question, y = prop)) +
geom_bar(stat = "identity") +
scale_y_continuous(expand = c(0, 0), breaks= scales::pretty_breaks(), labels=scales::percent) +
labs(x="Feedback", y = "Participants", title = "Feedback") +
theme_minimal() +
theme(
plot.title = element_text(size = rel(1.2), face = "bold", hjust = 0),
plot.subtitle = element_text(size = rel(1.2), vjust = 7),
axis.text.y = element_text(size = rel(1.1)),
axis.text.x = element_text(size = rel(1.1), angle = 55, hjust = 1),
axis.title.x = element_blank()
)
# Chunk 3
df |>
select(Feedback_AllRealConfidence, Feedback_AllFakeConfidence) |>
pivot_longer(everything(), names_to = "Authenticity", values_to = "Confidence") |>
drop_na() |>
mutate(Authenticity = str_remove(Authenticity, "Feedback_"),
Authenticity = str_replace(Authenticity, "AllRealConfidence", "All images were real"),
Authenticity = str_replace(Authenticity, "AllFakeConfidence", "All images were fake")) |>
ggplot(aes(x = Confidence, fill= Authenticity)) +
geom_bar() +
scale_x_continuous(n.breaks = 6) +
labs(x="Confidence (0-5)", y = "Number of Participants", title = "Confidence on the authenticity of the images") +
theme_minimal() +
theme(
plot.title = element_text(size = rel(1.2), face = "bold", hjust = 0),
plot.subtitle = element_text(size = rel(1.2), vjust = 7),
axis.text.y = element_text(size = rel(1.1)),
axis.title.x = element_blank())
# Chunk 4
df |>
summarise(n = n(), .by=c("Feedback_Enjoyment")) |>
filter(!is.na(Feedback_Enjoyment)) |>
mutate(n = n / sum(n),
Feedback_Enjoyment = fct_rev(as.factor(Feedback_Enjoyment))) |>
ggplot(aes(y = n, x = 1, fill = Feedback_Enjoyment)) +
geom_bar(stat="identity", position="stack") +
scale_fill_manual(values=c("darkgreen", "yellowgreen",  "yellow", "orange", "red")) +
coord_flip() +
scale_x_continuous(expand=c(0, 0))  +
scale_y_continuous(labels = scales::percent)  +
labs(title="Experiment Enjoyment",
subtitle="Proportion of participants by condition") +
guides(fill = guide_legend(reverse=TRUE)) +
theme_minimal() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top",
legend.title = element_blank())
# Chunk 5
data.frame(Comments = df$Feedback_Text) |>
filter(!tolower(Comments) %in% c(NA, "no", "no comments", "nothing", "none", "", "no.", "no. ", "n/a", "n/a - thanks", "thanks")) |>
gt::gt() |>
gt::opt_stylize() |>
gt::opt_interactive(use_compact_mode = TRUE)
# Chunk 6
#| echo: true
#| code-fold: true
outliers <- list()
# Chunk 7
mobile <- table(df$Mobile)
outliers$Mobile <- sum(df$Mobile=="True")
df <- filter(df, Mobile == "False")
dftask <- filter(dftask, Participant %in% df$Participant)
# Chunk 8
df |>
mutate(Participant = fct_reorder(Participant, Experiment_Duration),
Category = ifelse(Experiment_Duration > 60, "extra", "ok"),
Duration = ifelse(Experiment_Duration > 60, 60, Experiment_Duration),
Group = ifelse(Participant %in% outliers, "Outlier", "ok")) |>
ggplot(aes(y = Participant, x = Duration)) +
geom_point(aes(color = Group, shape = Category)) +
geom_vline(xintercept = median(df$Experiment_Duration), color = "red", linetype = "dashed") +
geom_vline(xintercept = 15, color = "orange", linetype = "dotted") +
scale_shape_manual(values = c("extra" = 3, ok = 20)) +
scale_color_manual(values = c("Outlier" = "red", ok = "black"), guide="none") +
guides(color = "none", shape = "none") +
ggside::geom_xsidedensity(fill = "#4CAF50", color=NA) +
ggside::scale_xsidey_continuous(expand = c(0, 0)) +
labs(
title = "Experiment Completion Time",
x = "Duration (in minutes)",
y = "Participants"
)  +
theme_modern() +
ggside::theme_ggside_void() +
theme(ggside.panel.scale = .3,
panel.border = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
# Chunk 9
#| fig-width: 15
#| fig-height: 15
df |>
mutate(Participant = fct_reorder(Participant, Bait_Duration),
Category = ifelse(Bait_Duration > 5, "extra", "ok"),
Duration = ifelse(Bait_Duration > 5, 5, Bait_Duration),
Group = ifelse(Participant %in% outliers, "Outlier", "ok")) |>
ggplot(aes(y = Participant, x = Duration)) +
geom_point(aes(color = Group, shape = Category)) +
geom_vline(xintercept = median(df$Bait_Duration), color = "red", linetype = "dashed") +
geom_vline(xintercept = 0.5, color = "orange", linetype = "dotted") +
scale_shape_manual(values = c("extra" = 3, ok = 19)) +
scale_color_manual(values = c("Outlier" = "red", ok = "black"), guide="none") +
guides(color = "none", shape = "none") +
ggside::geom_xsidedensity(fill = "#9C27B0", color=NA) +
ggside::scale_xsidey_continuous(expand = c(0, 0)) +
labs(
title = "Questionnaire Completion Time",
x = "Duration (in minutes)",
y = "Participant"
)  +
theme_modern() +
ggside::theme_ggside_void() +
theme(ggside.panel.scale = .3,
panel.border = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
outliers$bait_duration <- filter(df, Bait_Duration < 0.5)$Participant
df[df$Participant %in% outliers$bait_duration, str_detect(names(df), "BAIT_\\d+")] <- NA
# Chunk 10
# Single arousal response (0)
outliers$novariability <- summarize(dftask, n = length(unique(Arousal)), .by="Participant") |>
filter(n == 1) |>
select(Participant) |>
pull()
df <- filter(df, !Participant %in% outliers$novariability)
dftask <- filter(dftask, !Participant %in% outliers$novariability)
# Chunk 11
dat <- dftask |>
filter(!Participant %in% outliers) |>
summarize(cor_ArVal = cor(Arousal, Valence),
cor_ArEnt = cor(Arousal, Enticing),
.by="Participant")
dat |>
mutate(Participant = fct_reorder(Participant, cor_ArVal)) |>
pivot_longer(starts_with("cor_")) |>
mutate(Group = ifelse(Participant %in% outliers, "Outlier", "ok")) |>
mutate(name = fct_relevel(name, "cor_ArVal", "cor_ArEnt"),
name = fct_recode(name, "Arousal - Valence" = "cor_ArVal", "Arousal - Enticement" = "cor_ArEnt")) |>
ggplot(aes(y = Participant, x = value)) +
geom_bar(stat =  "identity") +
# scale_fill_gradient2(low = "#3F51B5", mid = "#FF9800", high = "#4CAF50", midpoint = 0) +
# scale_fill_manual(values = c("Outlier" = "red", ok = "black"), guide="none") +
theme_bw() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
facet_wrap(~name, ncol=3, scales="free_x")
outliers$emo_ent <- sort(as.character(dat[dat$cor_ArEnt < 0, ]$Participant))
outliers$emo_aro <- sort(as.character(dat[dat$cor_ArVal < 0, ]$Participant))
outliers$arousal <- intersect(outliers$emo_aro, outliers$emo_ent)
sum(df$version=="old")
sum(df$version=="new")
report::report_participants(df, age="Age", sex="Sex", education="Education")
arousal <- df |>
ggplot(aes(x=Arousal, fill = Gender)) +
geom_bar() +
scale_y_sqrt(expand = c(0, 0)) +
scale_x_continuous(
breaks = c(0, 1),
labels = c("Not at all","Very much")) +
labs(title = "Arousal", ) +
facet_wrap(~Gender) +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
arousal
# Chunk 1
#| message: false
#| warning: false
library(tidyverse)
library(easystats)
library(patchwork)
library(ggside)
library(glmmTMB)
options(mc.cores = parallel::detectCores(),
brms.backend = "cmdstanr",
width = 300)
# Chunk 2: data preparation
#| warning: false
#|
dfsub <- read.csv("../data/data_participants.csv")
df <- read.csv("../data/data.csv") |>
right_join(
select(dfsub, Participant, Mobile, starts_with(c("Feedback_","BAIT")), COPS_Frequency, SexualActivity,- Feedback_Text),
by = "Participant"
) |>
datawizard::rescale(select= c("Arousal", "Enticing", "Valence"), range=c(0, 6), to=c(0,1)) |>
datawizard::rescale(select= c("Realness"), range=c(-3,3), to=c(0,1)) |>
mutate(Condition = case_when(
Condition == "Fiction" ~ "AI-Generated",
Condition == "Reality" ~ "Photograph"
)) |>
mutate(Condition = fct_relevel(Condition, "Photograph", "AI-Generated"),
Gender =  fct_relevel(Gender, "Male", "Female"),
PornFrequency = as.numeric(as.factor(COPS_Frequency)),
SexualActivity_num = as.numeric(as.factor(SexualActivity)),
ConditionBelief = case_when(
Condition == "Photograph" & Realness > 0.5 ~ "True",
Condition == "AI-Generated" & Realness < 0.5 ~ "True",
.default = "False",
)) |>
rename(AllRealConfidence = "Feedback_AllRealConfidence",
AllFakeConfidence = "Feedback_AllFakeConfidence",
Enjoyment = "Feedback_Enjoyment"
)|>
mutate(across(starts_with("Feedback_"), as.factor))
results_table <- function(model, effects="fixed", filter=NULL) {
if("marginaleffects" %in% class(model)) {
model |>
parameters::parameters() |>
as.data.frame() |>
select(-Parameter, -SE, -S, z=Statistic, -Predicted) |>
insight::format_table() |>
parameters::display()
} else {
display(parameters::parameters(model, effects=effects, keep=filter))
}
}
# Chunk 3: Bait Dimensions
df$BAIT_Videos <- (df$BAIT_VideosRealistic + (1 - df$BAIT_VideosIssues)) / 2
df$BAIT_Visual = (df$BAIT_ImagesRealistic + (1 - df$BAIT_ImagesIssues) + df$BAIT_ImitatingReality + df$BAIT_EnvironmentReal) / 4
df$BAIT_Text = (df$BAIT_TextRealistic + (1 - df$BAIT_TextIssues)) / 2
df$BAIT_Negative <- (df$BAIT_Worry + df$BAIT_Dangerous)/2
df$BAIT_Positive <- (df$BAIT_Exciting + df$BAIT_Benefit)/2
arousal <- df |>
ggplot(aes(x=Arousal, fill = Gender)) +
geom_bar() +
scale_y_sqrt(expand = c(0, 0)) +
scale_x_continuous(
breaks = c(0, 1),
labels = c("Not at all","Very much")) +
labs(title = "Arousal", ) +
facet_wrap(~Gender) +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
arousal
df |>
mutate(ConditionBelief = as.factor(ConditionBelief)) |>
mutate(ConditionBelief = case_when(
ConditionBelief == "False" ~ "Not Believed",
ConditionBelief == "True" ~ "Believed",)) |>
ggplot(aes(x=Arousal, fill=Gender)) +
geom_bar(position = "identity") +
scale_x_continuous(
breaks = c(0, 1),
labels = c("Not at all","Very much")) +
facet_grid(Gender~ConditionBelief, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
# scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Arousal Ratings for Images Based on Belief in Original Labels") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
enticiment <- df |>
ggplot(aes(x=Enticing, fill = Gender)) +
geom_bar() +
scale_y_sqrt(expand = c(0, 0)) +
scale_x_continuous(
breaks = c(0, 1),
labels = c("Not at all","Very much")) +
labs(title = "Enticement", ) +
facet_wrap(~Gender) +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
enticiment
valence <- df |>
ggplot(aes(x=Valence, fill = Gender)) +
geom_bar() +
scale_y_sqrt(expand = c(0, 0)) +
scale_x_continuous(
breaks = c(0, 1),
labels = c("Unplesant","Pleasant")) +
scale_fill_manual(values=c("Female"="#E91E63", "Male"="#FF9800"), guide="none") +
labs(title = "Valence", ) +
facet_wrap(~Gender) +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
valence
valence <- df |>
ggplot(aes(x=Valence, fill = Gender)) +
geom_bar() +
scale_y_sqrt(expand = c(0, 0)) +
scale_x_continuous(
breaks = c(0, 1),
labels = c("Unplesant","Pleasant")) +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
labs(title = "Valence", ) +
facet_wrap(~Gender) +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
valence
# Chunk 1
#| message: false
#| warning: false
library(tidyverse)
library(easystats)
library(patchwork)
library(ggside)
library(glmmTMB)
options(mc.cores = parallel::detectCores(),
brms.backend = "cmdstanr",
width = 300)
# Chunk 2: data preparation
#| warning: false
#|
dfsub <- read.csv("../data/data_participants.csv")
df <- read.csv("../data/data.csv") |>
right_join(
select(dfsub, Participant, Mobile, starts_with(c("Feedback_","BAIT")), COPS_Frequency, SexualActivity,- Feedback_Text),
by = "Participant"
) |>
datawizard::rescale(select= c("Arousal", "Enticing", "Valence"), range=c(0, 6), to=c(0,1)) |>
datawizard::rescale(select= c("Realness"), range=c(-3,3), to=c(0,1)) |>
mutate(Condition = case_when(
Condition == "Fiction" ~ "AI-Generated",
Condition == "Reality" ~ "Photograph"
)) |>
mutate(Condition = fct_relevel(Condition, "Photograph", "AI-Generated"),
Gender =  fct_relevel(Gender, "Male", "Female"),
PornFrequency = as.numeric(as.factor(COPS_Frequency)),
SexualActivity_num = as.numeric(as.factor(SexualActivity)),
ConditionBelief = case_when(
Condition == "Photograph" & Realness > 0.5 ~ "True",
Condition == "AI-Generated" & Realness < 0.5 ~ "True",
.default = "False",
)) |>
rename(AllRealConfidence = "Feedback_AllRealConfidence",
AllFakeConfidence = "Feedback_AllFakeConfidence",
Enjoyment = "Feedback_Enjoyment"
)|>
mutate(across(starts_with("Feedback_"), as.factor))
results_table <- function(model, effects="fixed", filter=NULL) {
if("marginaleffects" %in% class(model)) {
model |>
parameters::parameters() |>
as.data.frame() |>
select(-Parameter, -SE, -S, z=Statistic, -Predicted) |>
insight::format_table() |>
parameters::display()
} else {
display(parameters::parameters(model, effects=effects, keep=filter))
}
}
# Chunk 3: Bait Dimensions
df$BAIT_Videos <- (df$BAIT_VideosRealistic + (1 - df$BAIT_VideosIssues)) / 2
df$BAIT_Visual = (df$BAIT_ImagesRealistic + (1 - df$BAIT_ImagesIssues) + df$BAIT_ImitatingReality + df$BAIT_EnvironmentReal) / 4
df$BAIT_Text = (df$BAIT_TextRealistic + (1 - df$BAIT_TextIssues)) / 2
df$BAIT_Negative <- (df$BAIT_Worry + df$BAIT_Dangerous)/2
df$BAIT_Positive <- (df$BAIT_Exciting + df$BAIT_Benefit)/2
# Chunk 4: Arousal1
arousal <- df |>
ggplot(aes(x=Arousal, fill = Gender)) +
geom_bar() +
scale_y_sqrt(expand = c(0, 0)) +
scale_x_continuous(
breaks = c(0, 1),
labels = c("Not at all","Very much")) +
labs(title = "Arousal", ) +
facet_wrap(~Gender) +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
arousal
# Chunk 5: Arousal2
df |>
mutate(ConditionBelief = as.factor(ConditionBelief)) |>
mutate(ConditionBelief = case_when(
ConditionBelief == "False" ~ "Not Believed",
ConditionBelief == "True" ~ "Believed",)) |>
ggplot(aes(x=Arousal, fill=Gender)) +
geom_bar(position = "identity") +
scale_x_continuous(
breaks = c(0, 1),
labels = c("Not at all","Very much")) +
facet_grid(Gender~ConditionBelief, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
# scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Arousal Ratings for Images Based on Belief in Original Labels") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
# Chunk 7: Arousal3
m_a <- glmmTMB::glmmTMB(Arousal ~ Gender + (1|Participant),
data=df, family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
# control = glmmTMB::glmmTMBControl(optimizer=stats::optim, # nlminb, optim
#                                   optArgs = list(method = "BFGS"),  #Nelder-Mead, BFGS, CG
#                                   parallel = 8))
results_table(m_a)
# Chunk 8: Arousal Plot
estimate_relation(m_a) |>
ggplot(aes(x=Gender, y=Predicted)) +
geom_pointrange(aes(ymin=CI_low, ymax=CI_high, color = Gender), position=position_dodge(width=0.5)) +
scale_color_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +  labs(y="Arousal") +
theme_abyss()
# Chunk 9: Enticement1
enticiment <- df |>
ggplot(aes(x=Enticing, fill = Gender)) +
geom_bar() +
scale_y_sqrt(expand = c(0, 0)) +
scale_x_continuous(
breaks = c(0, 1),
labels = c("Not at all","Very much")) +
labs(title = "Enticement", ) +
facet_wrap(~Gender) +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
enticiment
# Chunk 10: Enticement2
df |>
mutate(ConditionBelief = as.factor(ConditionBelief)) |>
mutate(ConditionBelief = case_when(
ConditionBelief == "False" ~ "Not Believed",
ConditionBelief == "True" ~ "Believed",)) |>
ggplot(aes(x=Enticing, fill=Gender)) +
geom_bar(position = "identity", binwidth = 0.5) +
scale_x_continuous(
breaks = c(0, 1),
labels = c("Not at all","Very much")) +
facet_grid(Gender~ConditionBelief, scales="free_y") +
scale_fill_manual(values=c("Female"="#E91E63", "Male"="#FF9800"), guide="none") +
# scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Enticement Ratings for Images Based on Belief in Original Labels") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
# Chunk 11: Enticicement3
m_e <- glmmTMB::glmmTMB(Enticing ~ Gender + (1|Participant),
data=df,family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
# control = glmmTMB::glmmTMBControl(optimizer=stats::optim, # nlminb, optim
#                                   optArgs = list(method = "BFGS"),  #Nelder-Mead, BFGS, CG
#                                   parallel = 8))
results_table(m_e)
# Chunk 12: Enticement plot
estimate_relation(m_e) |>
ggplot(aes(x=Gender, y=Predicted)) +
geom_pointrange(aes(ymin=CI_low, ymax=CI_high, color = Gender), position=position_dodge(width=0.5)) +
scale_color_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +  labs(y="Enticement") +
theme_abyss()
# Chunk 13: Valence1
valence <- df |>
ggplot(aes(x=Valence, fill = Gender)) +
geom_bar() +
scale_y_sqrt(expand = c(0, 0)) +
scale_x_continuous(
breaks = c(0, 1),
labels = c("Unplesant","Pleasant")) +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
labs(title = "Valence", ) +
facet_wrap(~Gender) +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
valence
# Chunk 14: Valence2
df |>
mutate(ConditionBelief = as.factor(ConditionBelief)) |>
mutate(ConditionBelief = case_when(
ConditionBelief == "False" ~ "Not Believed",
ConditionBelief == "True" ~ "Believed",)) |>
ggplot(aes(x=Valence, fill=Gender)) +
geom_bar(position = "identity", binwidth = 0.5) +
scale_x_continuous(
breaks = c(0, 1),
labels = c("Unplesant","Pleasant")) +
facet_grid(Gender~ConditionBelief, scales="free_y") +
scale_fill_manual(values=c("Female"="#E91E63", "Male"="#FF9800"), guide="none") +
# scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Valence to Ratings for Images Based on Belief in Original Labels") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
# Chunk 15: Valence3
m_v <- glmmTMB::glmmTMB(Valence ~ Gender + (1|Participant), family=glmmTMB::ordbeta(),
data=df,
control = glmmTMB::glmmTMBControl(parallel = 8))
# control = glmmTMB::glmmTMBControl(optimizer=stats::optim, # nlminb, optim
#                                   optArgs = list(method = "BFGS"),  #Nelder-Mead, BFGS, CG
#                                   parallel = 8))
results_table(m_v)
# Chunk 16: Valence plot
estimate_relation(m_v) |>
ggplot(aes(x=Gender, y=Predicted)) +
geom_pointrange(aes(ymin=CI_low, ymax=CI_high, color = Gender), position=position_dodge(width=0.5)) +
scale_color_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +  labs(y="Valence") +
theme_abyss()
str(df)
str(dfsub)
str(read.csv("../data/data.csv"))
read.csv("../data/data.csv") |>
right_join(
select(dfsub, Participant, Mobile, starts_with(c("Feedback_","BAIT")), COPS_Frequency, SexualActivity,- Feedback_Text),
by = "Participant"
) |>
datawizard::rescale(select= c("Arousal", "Enticing", "Valence"), range=c(0, 6), to=c(0,1))
df <- read.csv("../data/data.csv") |>
right_join(
select(dfsub, Participant, Mobile, starts_with(c("Feedback_","BAIT")), COPS_Frequency, SexualActivity,- Feedback_Text),
by = "Participant"
) |>
datawizard::rescale(select= c("Arousal", "Enticing", "Valence"), range=c(0, 6), to=c(0,1))
str(df)
