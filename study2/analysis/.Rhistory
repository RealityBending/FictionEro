)) |>
mutate(Condition = fct_relevel(Condition, "Photograph", "AI-Generated"),
Gender =  fct_relevel(Gender, "Male", "Female"),
SexualOrientation = fct_relevel(SexualOrientation, "Heterosexual", "Homosexual", "Bisexual"),
PornFrequency = as.numeric(as.factor(COPS_Frequency)),
SexualActivity_num = as.numeric(as.factor(SexualActivity)),
ConditionBelief = case_when(
Condition == "Photograph" & Realness > 0.5 ~ "True",
Condition == "AI-Generated" & Realness < 0.5 ~ "True",
.default = "False",
)) |>
rename(AllRealConfidence = "Feedback_AllRealConfidence",
AllFakeConfidence = "Feedback_AllFakeConfidence",
Enjoyment = "Feedback_Enjoyment"
)|>
mutate(across(starts_with("Feedback_"), as.factor)) |>
mutate(ConditionBelief = as.factor(ConditionBelief))
results_table <- function(model, effects="fixed", filter=NULL) {
if("marginaleffects" %in% class(model)) {
model |>
parameters::parameters() |>
as.data.frame() |>
select(-Parameter, -SE, -S, z=Statistic, -Predicted) |>
insight::format_table() |>
parameters::display()
} else {
display(parameters::parameters(model, effects=effects, keep=filter))
}
}
df$BAIT_Videos <- (df$BAIT_VideosRealistic + (1 - df$BAIT_VideosIssues)) / 2
df$BAIT_Visual = (df$BAIT_ImagesRealistic + (1 - df$BAIT_ImagesIssues) + df$BAIT_ImitatingReality + df$BAIT_EnvironmentReal) / 4
df$BAIT_Text = (df$BAIT_TextRealistic + (1 - df$BAIT_TextIssues)) / 2
df$BAIT_Negative <- (df$BAIT_Worry + df$BAIT_Dangerous)/2
df$BAIT_Positive <- (df$BAIT_Exciting + df$BAIT_Benefit)/2
df <- df |>
filter(SexualOrientation == "Heterosexual")
pca <- principal_components(df[c("Valence", "Arousal", "Enticing")], n = 2)
pca
m <- glmmTMB::glmmTMB(Emotionality ~ Gender / Condition + (1| Participant) + (1|Stimulus),
data=df, family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
df$Emotionality <- as.numeric(normalize(predict(pca)$PC1))
emotionality <- df |>
mutate(Emotionality_Extreme = ifelse(Emotionality %in% c(0, 1), "Extreme", "Not extreme")) |>
ggplot(aes(x=Emotionality, fill = Gender)) +
geom_histogram(aes(color=Emotionality_Extreme), position = "identity", bins=20) +
facet_grid(~Gender, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Emotionality") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
emotionality
df$Emotionality <- as.numeric(normalize(predict(pca)$PC1))
emotionality <- df |>
mutate(Emotionality_Extreme = ifelse(Emotionality %in% c(0, 1), "Extreme", "Not extreme")) |>
ggplot(aes(x=Emotionality, fill = Gender)) +
geom_histogram(aes(color=Emotionality_Extreme), position = "identity", bins=20) +
facet_grid(~Gender, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Emotionality") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
emotionality
emotionality_desc <- plot_descriptive(df, "Emotionality")
m <- glmmTMB::glmmTMB(Emotionality ~ Gender / Condition + (1| Participant) + (1|Stimulus),
data=df, family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
results_table(m)
marginaleffects::avg_slopes(m, variables="Condition", by="Gender", re.form=NA)
df$Emotionality <- as.numeric(normalize(-predict(pca)$PC1))
m <- glmmTMB::glmmTMB(Emotionality ~ Gender / Condition + (1| Participant) + (1|Stimulus),
data=df, family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
results_table(m)
marginaleffects::avg_slopes(m, variables="Condition", by="Gender", re.form=NA)
df$Emotionality <- as.numeric(normalize(-predict(pca)$PC1))
emotionality <- df |>
mutate(Emotionality_Extreme = ifelse(Emotionality %in% c(0, 1), "Extreme", "Not extreme")) |>
ggplot(aes(x=Emotionality, fill = Gender)) +
geom_histogram(aes(color=Emotionality_Extreme), position = "identity", bins=20) +
facet_grid(~Gender, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Emotionality") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
emotionality
for(m in c("BAIT_Visual", "BAIT_Text", "BAIT_ExpertAI",
"BAIT_Positive", "BAIT_Negative", "PornFrequency", "SexualActivity_num")) {
moderator_results <- rbind(moderator_results,
test_moderator(df, "Emotionality", m))
}
moderator_results <- data.frame()
for(m in c("BAIT_Visual", "BAIT_Text", "BAIT_ExpertAI", "BAIT_Positive", "BAIT_Negative", "PornFrequency", "SexualActivity_num")) {
moderator_results <- rbind(moderator_results,
test_moderator(df, "Arousal", m))
}
test_moderator <- function(df, outcome="Arousal", moderator="BAIT_Visual") {
f <- paste0(outcome, " ~ Gender / (Condition * ", moderator, ") + (Condition | Participant) + (1|Stimulus)")
r <- glmmTMB::glmmTMB(as.formula(f),
data = df,
family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8)) |>
parameters::parameters() |>
as.data.frame() |>
select(-df_error, -Effects, -Group, -Component, -SE)
r$Moderator <- moderator
r$Outcome <- outcome
insight::format_table(r[c(7, 8), ])
}
moderator_results <- data.frame()
for(m in c("BAIT_Visual", "BAIT_Text", "BAIT_ExpertAI", "BAIT_Positive", "BAIT_Negative", "PornFrequency", "SexualActivity_num")) {
moderator_results <- rbind(moderator_results,
test_moderator(df, "Arousal", m))
}
display(moderator_results)
for(m in c("BAIT_Visual", "BAIT_Text", "BAIT_ExpertAI",
"BAIT_Positive", "BAIT_Negative", "PornFrequency", "SexualActivity_num")) {
moderator_results <- rbind(moderator_results,
test_moderator(df, "Emotionality", m))
}
display(filter(moderator_results, Outcome == "Emotionality"))
for(m in c("Feedback_NoFacesAttractive", "Feedback_SomeFacesAttractive",
"Feedback_AIMoreAttractive", "Feedback_AILessAttractive",
"Feedback_AIMoreArousing", "Feedback_AILessArousing",
"Feedback_DiffObvious", "Feedback_DiffNone",
"Feedback_LabelsIncorrect", "Feedback_LabelsReversed",
"Feedback_AllReal", "Feedback_AllFake",
"AllRealConfidence","AllFakeConfidence" ,
"Enjoyment")) {
feedback_results <- rbind(feedback_results,
test_moderator(df, "Emotionality", m))
}
feedback_results <- data.frame()
for(m in c("Feedback_NoFacesAttractive", "Feedback_SomeFacesAttractive",
"Feedback_AIMoreAttractive", "Feedback_AILessAttractive",
"Feedback_AIMoreArousing", "Feedback_AILessArousing",
"Feedback_DiffObvious", "Feedback_DiffNone",
"Feedback_LabelsIncorrect", "Feedback_LabelsReversed",
"Feedback_AllReal", "Feedback_AllFake",
"AllRealConfidence","AllFakeConfidence" ,
"Enjoyment")) {
feedback_results <- rbind(feedback_results,
test_moderator(df, "Arousal", m))
}
display(feedback_results)
for(m in c("Feedback_NoFacesAttractive", "Feedback_SomeFacesAttractive",
"Feedback_AIMoreAttractive", "Feedback_AILessAttractive",
"Feedback_AIMoreArousing", "Feedback_AILessArousing",
"Feedback_DiffObvious", "Feedback_DiffNone",
"Feedback_LabelsIncorrect", "Feedback_LabelsReversed",
"Feedback_AllReal", "Feedback_AllFake",
"AllRealConfidence","AllFakeConfidence" ,
"Enjoyment")) {
feedback_results <- rbind(feedback_results,
test_moderator(df, "Emotionality", m))
}
display(filter(feedback_results, Outcome == "Emotionality"))
marginaleffects::avg_slopes(m_enticement, variables="Condition", by="Gender") |>
results_table()
# Chunk 1
#| message: false
#| warning: false
library(tidyverse)
library(easystats)
library(patchwork)
library(ggside)
library(glmmTMB)
options(mc.cores = parallel::detectCores(),
brms.backend = "cmdstanr",
width = 300)
# Chunk 2: data preparation
#| warning: false
#|
dfsub <- read.csv("../data/data_participants.csv")
df <- read.csv("../data/data.csv") |>
right_join(
select(dfsub, Participant, Mobile, starts_with(c("Feedback_","BAIT")), COPS_Frequency, SexualActivity,- Feedback_Text),
by = "Participant"
) |>
datawizard::rescale(select= c("Arousal", "Enticing", "Valence"), range=c(0, 6), to=c(0,1)) |>
datawizard::rescale(select= c("Realness"), range=c(-3,3), to=c(0,1)) |>
mutate(Condition = case_when(
Condition == "Fiction" ~ "AI-Generated",
Condition == "Reality" ~ "Photograph"
)) |>
mutate(Condition = fct_relevel(Condition, "Photograph", "AI-Generated"),
Gender =  fct_relevel(Gender, "Male", "Female"),
SexualOrientation = fct_relevel(SexualOrientation, "Heterosexual", "Homosexual", "Bisexual"),
PornFrequency = as.numeric(as.factor(COPS_Frequency)),
SexualActivity_num = as.numeric(as.factor(SexualActivity)),
ConditionBelief = case_when(
Condition == "Photograph" & Realness > 0.5 ~ "True",
Condition == "AI-Generated" & Realness < 0.5 ~ "True",
.default = "False",
)) |>
rename(AllRealConfidence = "Feedback_AllRealConfidence",
AllFakeConfidence = "Feedback_AllFakeConfidence",
Enjoyment = "Feedback_Enjoyment"
)|>
mutate(across(starts_with("Feedback_"), as.factor)) |>
mutate(ConditionBelief = as.factor(ConditionBelief)) |>
mutate(StimuliType = case_when(
grepl("couple", Stimulus, ignore.case = TRUE) ~ "Couple",
TRUE ~ "Individual")) |>
mutate(StimuliType = fct_relevel(StimuliType, "Individual", "Couple"))
results_table <- function(model, effects="fixed", filter=NULL) {
if("marginaleffects" %in% class(model)) {
model |>
parameters::parameters() |>
as.data.frame() |>
select(-Parameter, -SE, -S, z=Statistic) |>
insight::format_table() |>
parameters::display()
} else {
display(parameters::parameters(model, effects=effects, keep=filter))
}
}
# Chunk 3: Bait Dimensions
df$BAIT_Videos <- (df$BAIT_VideosRealistic + (1 - df$BAIT_VideosIssues)) / 2
df$BAIT_Visual = (df$BAIT_ImagesRealistic + (1 - df$BAIT_ImagesIssues) + df$BAIT_ImitatingReality + df$BAIT_EnvironmentReal) / 4
df$BAIT_Text = (df$BAIT_TextRealistic + (1 - df$BAIT_TextIssues)) / 2
df$BAIT_Negative <- (df$BAIT_Worry + df$BAIT_Dangerous)/2
df$BAIT_Positive <- (df$BAIT_Exciting + df$BAIT_Benefit)/2
# Chunk 4: Arousal1
#| fig-width: 12
arousal <- df |>
ggplot(aes(x=Arousal, fill = Gender)) +
geom_bar() +
scale_y_sqrt(expand = c(0, 0)) +
scale_x_continuous(
breaks = c(0, 1),
labels = c("Not at all","Very much")) +
labs(title = "Arousal", ) +
facet_wrap(Gender~SexualOrientation) +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
arousal
# Chunk 5: Arousal2
df |>
mutate(ConditionBelief = as.factor(ConditionBelief)) |>
mutate(ConditionBelief = case_when(
ConditionBelief == "False" ~ "Not Believed",
ConditionBelief == "True" ~ "Believed",)) |>
ggplot(aes(x=Arousal, fill=Gender)) +
geom_bar(position = "identity") +
scale_x_continuous(
breaks = c(0, 1),
labels = c("Not at all","Very much")) +
facet_grid(Gender~ConditionBelief, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
# scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Arousal Ratings for Images Based on Belief in Original Labels") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
# Chunk 7: Arousal3
m_a <- glmmTMB::glmmTMB(Arousal ~ Gender/ SexualOrientation + (1|Participant),
data=df, family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
# control = glmmTMB::glmmTMBControl(optimizer=stats::optim, # nlminb, optim
#                                   optArgs = list(method = "BFGS"),  #Nelder-Mead, BFGS, CG
#                                   parallel = 8))
results_table(m_a)
# Chunk 8: Arousal Plot
estimate_relation(m_a) |>
ggplot(aes(x=Gender, y=Predicted)) +
geom_pointrange(aes(ymin=CI_low, ymax=CI_high, color = Gender), position=position_dodge(width=0.5)) +
scale_color_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +  labs(y="Arousal") +
facet_wrap(~SexualOrientation) +
theme_abyss()
# Chunk 9: Enticement1
#| fig-width: 12
enticiment <- df |>
ggplot(aes(x=Enticing, fill = Gender)) +
geom_bar() +
scale_y_sqrt(expand = c(0, 0)) +
scale_x_continuous(
breaks = c(0, 1),
labels = c("Not at all","Very much")) +
labs(title = "Enticement", ) +
facet_wrap(Gender~SexualOrientation) +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
enticiment
# Chunk 10: Enticement2
df |>
mutate(ConditionBelief = as.factor(ConditionBelief)) |>
mutate(ConditionBelief = case_when(
ConditionBelief == "False" ~ "Not Believed",
ConditionBelief == "True" ~ "Believed",)) |>
ggplot(aes(x=Enticing, fill=Gender)) +
geom_bar(position = "identity", binwidth = 0.5) +
scale_x_continuous(
breaks = c(0, 1),
labels = c("Not at all","Very much")) +
facet_grid(Gender~ConditionBelief, scales="free_y") +
scale_fill_manual(values=c("Female"="#E91E63", "Male"="#FF9800"), guide="none") +
# scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Enticement Ratings for Images Based on Belief in Original Labels") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
# Chunk 11: Enticicement3
m_e <- glmmTMB::glmmTMB(Enticing ~ Gender/SexualOrientation + (1|Participant),
data=df,family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
# control = glmmTMB::glmmTMBControl(optimizer=stats::optim, # nlminb, optim
#                                   optArgs = list(method = "BFGS"),  #Nelder-Mead, BFGS, CG
#                                   parallel = 8))
results_table(m_e)
# Chunk 12: Enticement plot
estimate_relation(m_e) |>
ggplot(aes(x=Gender, y=Predicted)) +
geom_pointrange(aes(ymin=CI_low, ymax=CI_high, color = Gender), position=position_dodge(width=0.5)) +
scale_color_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
facet_wrap(~SexualOrientation) +
labs(y="Enticement") +
theme_abyss()
# Chunk 13: Valence1
#| fig-width: 12
valence <- df |>
ggplot(aes(x=Valence, fill = Gender)) +
geom_bar() +
scale_y_sqrt(expand = c(0, 0)) +
scale_x_continuous(
breaks = c(0, 1),
labels = c("Unplesant","Pleasant")) +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
labs(title = "Valence", ) +
facet_wrap(Gender~SexualOrientation) +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
valence
# Chunk 14: Valence2
df |>
mutate(ConditionBelief = as.factor(ConditionBelief)) |>
mutate(ConditionBelief = case_when(
ConditionBelief == "False" ~ "Not Believed",
ConditionBelief == "True" ~ "Believed",)) |>
ggplot(aes(x=Valence, fill=Gender)) +
geom_bar(position = "identity", binwidth = 0.5) +
scale_x_continuous(
breaks = c(0, 1),
labels = c("Unplesant","Pleasant")) +
facet_grid(Gender~ConditionBelief, scales="free_y") +
scale_fill_manual(values=c("Female"="#E91E63", "Male"="#FF9800"), guide="none") +
# scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Valence to Ratings for Images Based on Belief in Original Labels") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
# Chunk 15: Valence3
m_v <- glmmTMB::glmmTMB(Valence ~ Gender/SexualOrientation+ (1|Participant), family=glmmTMB::ordbeta(),
data=df,
control = glmmTMB::glmmTMBControl(parallel = 8))
# control = glmmTMB::glmmTMBControl(optimizer=stats::optim, # nlminb, optim
#                                   optArgs = list(method = "BFGS"),  #Nelder-Mead, BFGS, CG
#                                   parallel = 8))
results_table(m_v)
# Chunk 16: Valence plot
estimate_relation(m_v) |>
ggplot(aes(x=Gender, y=Predicted)) +
geom_pointrange(aes(ymin=CI_low, ymax=CI_high, color = Gender), position=position_dodge(width=0.5)) +
scale_color_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +  labs(y="Valence") +
facet_wrap(~SexualOrientation) +
theme_abyss()
# Chunk 17
df <- df |>
filter(SexualOrientation == "Heterosexual")
# Chunk 18: Arousal Desc
#| fig-height: 12
#| fig-width: 7
plot_descriptive <- function(df, target="Arousal") {
# By item
order <- df |>
mutate(.Item_Order = paste0(Gender, "_", Stimulus)) |>
summarize(mean = mean(.data[[target]], na.rm=TRUE), .by=c("Condition", ".Item_Order")) |>
arrange(.Item_Order, desc(Condition)) |>
mutate(diff = sign(mean - lag(mean)),
Relevance = str_extract(.Item_Order, "^[^_]+"),
.Item_Order = str_extract(.Item_Order, "(?<=_).+")) |>
filter(Condition == "Photograph") |>
arrange(diff, mean)
p1 <- df |>
mutate(.Item_Order = paste0(Gender, "_", Stimulus)) |>
group_by(.Item_Order, Condition) |>
ggdist::mean_qi(.data[[target]], .width=0.95) |>
mutate(Gender = fct_rev(str_extract(.Item_Order, "^[^_]+"))) |>
left_join(order[c(".Item_Order", "diff")], by=".Item_Order") |>
mutate(.Item_Order = fct_relevel(.Item_Order, intersect(order$.Item_Order, unique(.Item_Order)))) |>
# mutate(.average = mean(.data[[target]]), .by="Item") |>
# mutate(Item = fct_reorder(Item, .average)) |>
ggplot(aes(y = .Item_Order, x=.data[[target]])) +
geom_line(aes(color=as.factor(diff)), linewidth=1) +
geom_point(aes(color=Condition), size=2) +
# ggdist::stat_slabinterval(aes(fill=Condition, color=Condition),
#                           .width=0.95, normalize="xy", slab_alpha=0.5) +
# ggdist::stat_histinterval(aes(fill=Condition, color=Condition),
#                           .width=0.95, normalize="xy", slab_alpha=0.5) +
scale_color_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336", "1"="#F44336", "-1"="#2196F3"),
breaks = c('AI-Generated', 'Photograph')) +
# scale_fill_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336")) +
scale_y_discrete(labels = function(x) str_extract(x, "(?<=_).+")) +
theme_minimal() +
theme(panel.grid.minor.x = element_blank(),
# panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.line.x = element_blank()) +
labs(title = paste0(target, " by Item"), color="Condition", y="Items") +
facet_wrap(~Gender, scales="free_y")
# By participant
p2 <- df |>
summarize(.average = mean(.data[[target]]),
.by=c("Gender", "Participant", "Condition")) |>
pivot_wider(names_from = Condition, values_from = .average) |>
mutate(.diff = Photograph - `AI-Generated`) |>
mutate(Participant = fct_reorder(Participant, .diff)) |>
ggplot(aes(x = .diff, y=Participant)) +
geom_bar(aes(fill=.diff), stat = "identity")  +
scale_fill_gradient2(guide="none", low="red", high="red", mid="blue") +
labs(title = paste0(target, " by Participant")) +
facet_wrap(~Gender, ncol=2, scales="free_y") +
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.line.x = element_blank(),
axis.text.y = element_blank()) +
labs(title = paste0(target, " by Participant"), x="Difference (Photograph - AI-Generated)", y="Participants")
p1 / p2 + plot_layout(heights = c(2, 1))
}
# remove other
arousal_desc <- df |>
filter(Gender != "Other") |>
plot_descriptive("Arousal")
arousal_desc
# Chunk 19: Arousal with Stimuli Type
m_arousal <- glmmTMB::glmmTMB(Arousal ~ Gender/ StimuliType/ Condition +
(Condition| Participant) + (1|Stimulus), family=glmmTMB::ordbeta(),
data=df, control = glmmTMB::glmmTMBControl(parallel = 8))
results_table(m_arousal)
marginaleffects::avg_slopes(m_arousal, variables=c("Condition", "StimuliType"), by="Gender") |>
results_table()
# Chunk 20: Arousal Moderator
test_moderator <- function(df, outcome="Arousal", moderator="BAIT_Visual") {
f <- paste0(outcome, " ~ Gender / (Condition * ", moderator, ") + (Condition | Participant) + (1|Stimulus)")
r <- glmmTMB::glmmTMB(as.formula(f),
data = df,
family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8)) |>
parameters::parameters() |>
as.data.frame() |>
select(-df_error, -Effects, -Group, -Component, -SE)
r$Moderator <- moderator
r$Outcome <- outcome
insight::format_table(r[c(7, 8), ])
}
moderator_results <- data.frame()
for(m in c("BAIT_Visual", "BAIT_Text", "BAIT_ExpertAI", "BAIT_Positive", "BAIT_Negative", "PornFrequency", "SexualActivity_num")) {
moderator_results <- rbind(moderator_results,
test_moderator(df, "Arousal", m))
}
display(moderator_results)
# Chunk 21: Arousal Moderator Feedback
feedback_results <- data.frame()
for(m in c("Feedback_NoFacesAttractive", "Feedback_SomeFacesAttractive",
"Feedback_AIMoreAttractive", "Feedback_AILessAttractive",
"Feedback_AIMoreArousing", "Feedback_AILessArousing",
"Feedback_DiffObvious", "Feedback_DiffNone",
"Feedback_LabelsIncorrect", "Feedback_LabelsReversed",
"Feedback_AllReal", "Feedback_AllFake",
"AllRealConfidence","AllFakeConfidence" ,
"Enjoyment")) {
feedback_results <- rbind(feedback_results,
test_moderator(df, "Arousal", m))
}
display(feedback_results)
# Chunk 22: Arousal Sexual Activity
m <- glmmTMB::glmmTMB(Arousal ~ Gender / (Condition * SexualActivity_num) + (Condition | Participant) + (1|Stimulus),
data=filter(df, ConditionBelief == "True"),
family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
results_table(m)
sex_act_plot<- estimate_relation(m, length=20) |>
ggplot(aes(x=SexualActivity_num, y=Predicted)) +
geom_ribbon(aes(ymin=CI_low, ymax=CI_high, fill=Condition), alpha=0.2) +
geom_line(aes(color=Condition)) +
facet_grid(~Gender)
sex_act_plot
# Chunk 23: Arousal Believed
m_a_b <- glmmTMB::glmmTMB(Arousal ~ Gender / Condition + (Condition|Participant) + (Condition|Stimulus),
data=filter(df, ConditionBelief == "True"),
family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
results_table(m_a_b)
# Chunk 24: Arousal Believed2
moderator_believed <- data.frame()
for(m in c("BAIT_Visual", "BAIT_Text", "BAIT_ExpertAI",
"BAIT_Positive", "BAIT_Negative",
"PornFrequency", "SexualActivity",
"Feedback_DiffObvious", "Feedback_DiffNone",
"Feedback_AIMoreArousing", "Feedback_AILessArousing",
"Feedback_AIMoreAttractive", "Feedback_AILessAttractive",
"Feedback_LabelsIncorrect", "Feedback_LabelsReversed")) {
moderator_believed <- rbind(moderator_believed,
test_moderator(filter(df, ConditionBelief == "True"), "Arousal", m))
}
