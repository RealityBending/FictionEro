---
title: "FictionEro - Affective Impact of Fiction"
editor: source
editor_options: 
  chunk_output_type: console
format:
  html:
    toc: true
    code-fold: true
    self-contained: false
execute: 
  cache: true
---


## Data Preparation

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(easystats)
library(patchwork)
library(ggside)
library(glmmTMB)
library(gt)

options(mc.cores = parallel::detectCores(),
        brms.backend = "cmdstanr",
        width = 300)

results_table <- function(model, effects="fixed", filter=NULL) {
  if("marginaleffects" %in% class(model)) {
    model |> 
      parameters::parameters() |> 
      as.data.frame() |> 
      select(-Parameter, -SE, -S, z=Statistic) |> 
      insight::format_table() |> 
      parameters::display()
  } else {
    display(parameters::parameters(model, effects=effects, keep=filter))
  }
}

```

```{r data study1}
#| warning: false

dfsub1 <- dfsub <- read.csv("https://raw.githubusercontent.com/RealityBending/FictionEro/refs/heads/main/study1/data/data_participants.csv")
df1 <- read.csv("https://raw.githubusercontent.com/RealityBending/FictionEro/refs/heads/main/study1/data/data.csv") |> 
  right_join(
    select(dfsub1, Participant, Sample, Language, Mobile, starts_with("Feedback_"), 
           BAIT_Visual, BAIT_Text, AI_Knowledge, SexualActivity, 
           GAAIS_Negative, GAAIS_Positive, Porn, COPS_Frequency_2,
           Screen_Size,
           -Feedback_Comments),
    by = "Participant") |> 
  rename(Gender = Sex) |>
  datawizard::rescale(select=c("Valence"), range=c(-1, 1), to=c(0, 1)) |> 
  mutate(Condition = fct_relevel(Condition, "Photograph", "AI-Generated"),
         Relevance =  fct_relevel(Relevance, "Relevant", "Irrelevant", "Non-erotic"),
         Gender =  fct_relevel(Gender, "Male", "Female"),
         PornFrequency = as.numeric(as.factor(COPS_Frequency_2)),
         SexualActivity_num = as.numeric(as.factor(SexualActivity)),
         ConditionBelief = case_when(
           Condition == "Photograph" & Realness > 0.5 ~ "True",
           Condition == "AI-Generated" & Realness < 0.5 ~ "True",
           .default = "False"
         )) |> 
  mutate(across(starts_with("Feedback_"), function(x) {fct_relevel(x, "False", "True")}))
```

```{r data study2}
#| warning: false

dfsub2 <- read.csv("https://raw.githubusercontent.com/RealityBending/FictionEro/refs/heads/main/study2/data/data_participants.csv")
df2 <- read.csv("https://raw.githubusercontent.com/RealityBending/FictionEro/refs/heads/main/study2/data/data.csv") |> 
  right_join(
    select(dfsub2, Participant, Mobile, starts_with(c("Feedback_","BAIT")), COPS_Frequency, SexualActivity,- Feedback_Text),
    by = "Participant"
  ) |> 
  datawizard::rescale(select= c("Arousal", "Enticing", "Valence"), range=c(0, 6), to=c(0,1)) |> 
  datawizard::rescale(select= c("Realness"), range=c(-3,3), to=c(0,1)) |>
  mutate(Condition = case_when(
    Condition == "Fiction" ~ "AI-Generated",
    Condition == "Reality" ~ "Photograph"
  )) |>
  mutate(Condition = fct_relevel(Condition, "Photograph", "AI-Generated"),
         Gender =  fct_relevel(Gender, "Male", "Female"),
         SexualOrientation = fct_relevel(SexualOrientation, "Heterosexual", "Homosexual", "Bisexual"),
         PornFrequency = as.numeric(as.factor(COPS_Frequency)),
         SexualActivity_num = as.numeric(as.factor(SexualActivity)),
         ConditionBelief = case_when(
           Condition == "Photograph" & Realness > 0.5 ~ "True",
           Condition == "AI-Generated" & Realness < 0.5 ~ "True",
           .default = "False",
         )) |>
  rename(AllRealConfidence = "Feedback_AllRealConfidence",
         AllFakeConfidence = "Feedback_AllFakeConfidence",
         Enjoyment = "Feedback_Enjoyment",
         Item = Stimulus
  )|>
  mutate(across(starts_with("Feedback_"), as.factor)) |>
  mutate(ConditionBelief = as.factor(ConditionBelief)) |>
  mutate(StimuliType = case_when(
    grepl("couple", Item, ignore.case = TRUE) ~ "Couple",
    TRUE ~ "Individual")) |>
  mutate(StimuliType = fct_relevel(StimuliType, "Individual", "Couple"))
```


## Manipulation Checks

::: {.panel-tabset}

### Rate Belief

```{r ratebelief}

rate1 <- table(df1$Feedback_LabelsIncorrect)["True"] / sum(table(df1$Feedback_LabelsIncorrect))
rate2 <- table(df2$Feedback_AllReal)["True"] / sum(table(df2$Feedback_AllReal))

```

The rate of people that did not believe the instructions in study 1 (i.e., gave feedback that the labels were incorrect) was `r round(mean(rate1) * 100, 1)`% while in study 2 (i.e., gave feedback that all images were real images) was `r round(mean(rate2) * 100, 1)`%. 

### Arousal Distributions

```{r Arousal1}
#| fig-width: 12
arousal_dist1 <- df1 |>
  ggplot(aes(x=Arousal, fill = Condition)) +
  geom_histogram(position = "identity", alpha = 0.5, colour = "black", bins = 30) +
  scale_x_continuous(breaks = c(0, 1)) +
  labs(title = "Arousal Study 1", ) +
  facet_wrap(~Gender) +
  scale_fill_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336")) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face="bold"))


arousal_dist1
```

```{r Arousal2}
#| fig-width: 12
arousal_dist2 <- df2 |>
  ggplot(aes(x=Arousal, fill = Condition)) +
  geom_bar(position = "identity", alpha = 0.5, line = "black") +
  scale_y_sqrt(expand = c(0, 0)) +
  scale_x_continuous(breaks = c(0, 1)) +
  labs(title = "Arousal Study 2", ) +
  facet_wrap(~Gender) +
  scale_fill_manual(values=c("Photograph"="#F44336", "AI-Generated"="#2196F3")) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face="bold"))

arousal_dist2
```

### Arousal Distributions

```{r Arousal1}
#| fig-width: 12
arousal_dist1 <- df1 |>
  ggplot(aes(x=Arousal, fill = Condition)) +
  geom_histogram(position = "identity", alpha = 0.5, colour = "black", bins = 30) +
  scale_x_continuous(breaks = c(0, 1)) +
  labs(title = "Arousal Study 1", ) +
  facet_wrap(~Gender) +
  scale_fill_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336")) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face="bold"))


arousal_dist1
```

```{r Arousal2}
#| fig-width: 12
arousal_dist2 <- df2 |>
  ggplot(aes(x=Arousal, fill = Condition)) +
  geom_bar(position = "identity", alpha = 0.5, line = "black") +
  scale_y_sqrt(expand = c(0, 0)) +
  scale_x_continuous(breaks = c(0, 1)) +
  labs(title = "Arousal Study 2", ) +
  facet_wrap(~Gender) +
  scale_fill_manual(values=c("Photograph"="#F44336", "AI-Generated"="#2196F3")) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face="bold"))

arousal_dist2
```

### Enticment Distributions

```{r Arousal1}
#| fig-width: 12
enticement_dist1 <- df1 |>
  ggplot(aes(x=Enticement, fill = Condition)) +
  geom_histogram(position = "identity", alpha = 0.5, colour = "black", bins = 30) +
  scale_x_continuous(breaks = c(0, 1)) +
  labs(title = "Enticement Study 1", ) +
  facet_wrap(~Gender) +
  scale_fill_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336")) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face="bold"))


enticement_dist1
```

```{r Arousal2}
#| fig-width: 12
enticement_dist2 <- df2 |>
  ggplot(aes(x=Enticing, fill = Condition)) +
  geom_bar(position = "identity", alpha = 0.5, line = "black") +
  scale_y_sqrt(expand = c(0, 0)) +
  scale_x_continuous(breaks = c(0, 1)) +
  labs(title = "Enticment Study 2", ) +
  facet_wrap(~Gender) +
  scale_fill_manual(values=c("Photograph"="#F44336", "AI-Generated"="#2196F3")) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face="bold"))

enticement_dist2
```

### Valence Distributions

```{r Arousal1}
#| fig-width: 12
valence_dist1 <- df1 |>
  ggplot(aes(x=Valence, fill = Condition)) +
  geom_histogram(position = "identity", alpha = 0.5, colour = "black", bins = 30) +
  scale_x_continuous(breaks = c(0, 1)) +
  labs(title = "Valence Study 1", ) +
  facet_wrap(~Gender) +
  scale_fill_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336")) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face="bold"))


valence_dist1
```

```{r Arousal2}
#| fig-width: 12
valence_dist2 <- df2 |>
  ggplot(aes(x=Valence, fill = Condition)) +
  geom_bar(position = "identity", alpha = 0.5, line = "black") +
  scale_y_sqrt(expand = c(0, 0)) +
  scale_x_continuous(breaks = c(0, 1)) +
  labs(title = "Valence Study 2", ) +
  facet_wrap(~Gender) +
  scale_fill_manual(values=c("Photograph"="#F44336", "AI-Generated"="#2196F3")) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face="bold"))

valence_dist2
```

### Average Arousal 

```{r meanarousal 1}
#| message: false

dfsub1 <- dfsub1 |>
  right_join(
    df1 |>
      group_by(Participant, Condition) |>
      summarise(mean_arousal = mean(Arousal, na.rm = TRUE), .groups = "drop") |>
      pivot_wider(
        names_from = Condition,
        names_prefix = "mean_Arousal_",
        values_from = mean_arousal
      ) |>
      mutate(diff_arousal = `mean_Arousal_AI-Generated` - mean_Arousal_Photograph)
  )

ttest1 <- stats::t.test(diff_arousal ~ Feedback_AILessArousing, data = dfsub1)
```

```{r}
diff_plot1 <- dfsub1 |> 
  ggplot(aes(x = Feedback_AILessArousing, y = diff_arousal, fill = Feedback_AILessArousing)) +
  geom_boxplot(width = 0.4,alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.1, size = 1) +
  stat_summary(fun = mean, geom = "point", shape = 23, size = 2, fill = "black") +
  labs(
    title = "Study 1",
    x = "Participant said AI is less arousing",
    y = "Arousal Difference (AI - Photo)"
  ) +
  scale_fill_manual(values = c("True" = "#FF9800", "False" = "#E91E63")) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    legend.position = "none"
  )

diff_plot1
```

```{r meanarousal 2}
#| message: false

dfsub2 <- dfsub2 |>
  right_join(
    df2|>
      group_by(Participant, Condition)|>
      summarise(mean_arousal = mean(Arousal, na.rm = TRUE), .groups = "drop") |>
      pivot_wider(names_from = Condition, 
                  names_prefix = "mean_Arousal_", 
                  values_from = mean_arousal) |>
      mutate(diff_arousal = `mean_Arousal_AI-Generated` - mean_Arousal_Photograph)
  )

ttest2 <- stats::t.test(diff_arousal ~ Feedback_AILessArousing, data = dfsub2)
```

```{r}
diff_plot2 <- dfsub2 |> 
  ggplot(aes(x = Feedback_AILessArousing, y = diff_arousal, fill = Feedback_AILessArousing)) +
  geom_boxplot(width = 0.4, alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.1, size = 1) +
  stat_summary(fun = mean, geom = "point", shape = 23, size = 2, fill = "black") +
  labs(
    title = "Study 2",
    x = "Participant said AI is less arousing",
    y = "Arousal Difference (AI - Photo)"
  ) +
  scale_fill_manual(values = c("True" = "#FF9800", "False" = "#E91E63")) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    legend.position = "none"
  )

diff_plot2
```

**Study 1**: `r report::report(ttest1, data = dfsub1)`


**Study 2**: `r report::report(ttest2, data = dfsub2)`

:::


## Effect of Manipulation

::: {.panel-tabset}

### Arousal

```{r}
params_table <- function(m) {
  d <- as.data.frame(m, variable = insight::find_parameters(m, effects = "fixed", flatten  = TRUE))
  t <- bayestestR::describe_posterior(d, effects = "fixed", component = "all", ci_method = "hdi", test = "p_direction")
  out <- insight::format_table(t)
  out |> 
    mutate(col = t$pd) |> 
    gt::gt() |> 
    gt::data_color(columns = "col", method = "numeric", target_columns = "pd", 
                   row = col > 0.95, palette = "yellow") |> 
    gt::data_color(columns = "col", method = "numeric", target_columns = "pd", 
                   row = col > 0.97, palette = "green") |> 
    gt::cols_hide("col")
 }
```


```{r}
arousal1 <- readRDS("models/ModelArousal_1.rds")
arousal2 <- readRDS("models/ModelArousal_2.rds")
```

```{r}
params_table(arousal1)
summary(arousal1, robust = TRUE)
```

```{r}
params_table(arousal2)
summary(arousal2, robust = TRUE)

``` 

```{r}
#| fig-height: 8
#| fig-width: 8


make_combined_plot <- function(model1, model2 = NULL, 
                               title = "Estimated Marginal Means") {
  
  df1 <- modelbased::estimate_means(
    model1, by = c("Gender", "Relevance", "Condition", "ConditionBelief"),backend = "emmeans") |>
    dplyr::mutate(Sample = "Study 1") |>
    as.data.frame()
  
  # Study 2: only Relevant
  if (!is.null(model2)) {
    df2 <- modelbased::estimate_means(
      model2, by = c("Gender", "Condition", "ConditionBelief"), backend = "emmeans") |>
      dplyr::mutate(Relevance = "Relevant", Sample = "Study 2") |>
      as.data.frame()
    pred_df <- rbind(df1, df2)
  } else {
    pred_df <- df1
  }
  
  
  plt <- pred_df |>
    ggplot(aes(x = ConditionBelief, y = Estimate,color = Condition, linetype = Sample, group = interaction(Sample, Condition)
    )) +
    geom_hline(yintercept = 0, color = "darkgrey") +
    geom_line(linewidth = 1) +
    geom_point(size = 2) +
    geom_errorbar(aes(ymin = CI_low, ymax = CI_high), width = 0.1) +
    facet_grid(Relevance ~ Gender, switch = "y") +
    scale_color_manual(values = c("AI-Generated" = "#2196F3","Photograph" = "#F44336")) +
    theme_minimal(base_size = 14) +
    labs(title = title, x= "Whether the original labels were believed to be true",color = "Images presented as:", linetype = "Sample"
    ) +
    theme(
      axis.title.y = element_blank(),
      axis.text.y = element_text(size = 8),
      strip.placement = "outside",
      strip.background.x = element_rect(fill = "lightgrey", color = NA),
      strip.text.x = element_text(size = 10),
      strip.text.y = element_text(size = 10),
      axis.text.x = element_text(face = "bold", size = 9, color = "black"),
      legend.text = element_text(size = 10),
      legend.position = "bottom")
  
  plt
}

plta <- make_combined_plot(arousal1, arousal2, title = "Arousal Estimates for All Stimuli")

plta
```

### Enticement

```{r}
enticement1 <- readRDS("models/ModelEnticement_1.rds")
enticement2 <- readRDS("models/ModelEnticement_2.rds")
```


```{r}
params_table(enticement1)
summary(enticement1, robust = TRUE)
```

```{r}
params_table(enticement2)
summary(enticement2, robust = TRUE)

``` 


```{r}
#| fig-height: 8
#| fig-width: 8

plt_e <- make_combined_plot(enticement1, enticement2, title = "Enticement Estimates for All Stimuli")
plt_e
```

### Valence

```{r}
valence1 <- readRDS("models/ModelValence_1.rds")
valence2 <- readRDS("models/ModelValence_2.rds")
```


```{r}
params_table(valence1)
summary(valence1, robust = TRUE)
```

```{r}
params_table(valence2)
summary(valence2, robust = TRUE)

``` 

```{r}
#| fig-height: 8
#| fig-width: 8

plt_v <- make_combined_plot(valence1, valence2, title = "Valence Estimates for All Stimuli")
plt_v
```

:::

## Interindividual Variability and Moderators

1. extract random effects
2. make plot of participant effects
3. effect of condition believed + relevant 
4. correlation matrix/ matrix of scatter plots

### Random Effects


### Reliability 

```{r}
table_dvour <- function(g) {
  performance::performance_dvour(g) |> 
    arrange(desc(D_vour)) |> 
    gt::gt() |> 
    gt::data_color("D_vour", palette = c("red","green"), domain = c(0, 1)) |> 
    gt::fmt_auto()
}

g1 <- modelbased::estimate_grouplevel(model_draft)
table_dvour(g1)

```

#### Participant effects

```{r}
colors <- c("(Intercept)" = "#9C27B0","ConditionAI-Generated" = "#FF9800")

p2_dvour <- g1 |> 
  ggplot(aes(x = Coefficient, y = Level)) +
  geom_pointrange(aes(xmin = CI_low, xmax = CI_high, color = Parameter), linewidth = 0.3, size = 0.05) +
  facet_grid(Group~Parameter, scales = "free", switch="both") +
  ggside::ggside(scales  = "free") +
  ggside::geom_xsidedensity(aes(group = Parameter, fill = Parameter), color = NA) +
  ggside::ggside(scales  = "free") +
  scale_color_manual(values = colors) +
  scale_fill_manual(values = colors) +
  theme_minimal() +
  theme(axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        strip.placement.x = "outside",
        strip.background = element_rect(fill = NA, color = NA),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
        legend.position = "none")
p2_dvour
```

### Correlation



