---
title: "FictionEro - Affective Impact of Fiction"
editor: source
editor_options: 
  chunk_output_type: console
format:
  html:
    code-fold: true
    self-contained: false
    toc: true
execute: 
  cache: true
---

## Data Preparation

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(easystats)
library(patchwork)
library(ggside)
library(glmmTMB)
library(gt)

options(mc.cores = parallel::detectCores(),
        brms.backend = "cmdstanr",
        width = 300)


results_table <- function(model, effects="fixed", filter=NULL) {
  if("marginaleffects" %in% class(model)) {
    model |> 
      parameters::parameters() |> 
      as.data.frame() |> 
      select(-Parameter, -SE, -S, z=Statistic) |> 
      insight::format_table() |> 
      parameters::display()
  } else {
    display(parameters::parameters(model, effects=effects, keep=filter))
  }
}

```

```{r data study1}
#| warning: false

dfsub1 <- dfsub <- read.csv("https://raw.githubusercontent.com/RealityBending/FictionEro/refs/heads/main/study1/data/data_participants.csv")
df1 <- read.csv("https://raw.githubusercontent.com/RealityBending/FictionEro/refs/heads/main/study1/data/data.csv") |> 
  right_join(
    select(dfsub1, Participant, Sample, Language, Mobile, starts_with("Feedback_"), 
           BAIT_Visual, BAIT_Text, AI_Knowledge, SexualActivity, 
           GAAIS_Negative, GAAIS_Positive, Porn, COPS_Frequency_2,
           Screen_Size,
           -Feedback_Comments),
    by = "Participant") |> 
  rename(Gender = Sex) |>
  datawizard::rescale(select=c("Valence"), range=c(-1, 1), to=c(0, 1)) |> 
  mutate(Condition = fct_relevel(Condition, "Photograph", "AI-Generated"),
         Relevance =  fct_relevel(Relevance, "Relevant", "Irrelevant", "Non-erotic"),
         Gender =  fct_relevel(Gender, "Male", "Female"),
         PornFrequency = as.numeric(as.factor(COPS_Frequency_2)),
         SexualActivity_num = as.numeric(as.factor(SexualActivity)),
         ConditionBelief = case_when(
           Condition == "Photograph" & Realness > 0.5 ~ "True",
           Condition == "AI-Generated" & Realness < 0.5 ~ "True",
           .default = "False"
         )) |> 
  mutate(across(starts_with("Feedback_"), function(x) {fct_relevel(x, "False", "True")}))
```

```{r data study2}
#| warning: false

dfsub2 <- read.csv("https://raw.githubusercontent.com/RealityBending/FictionEro/refs/heads/main/study2/data/data_participants.csv")
df2 <- read.csv("https://raw.githubusercontent.com/RealityBending/FictionEro/refs/heads/main/study2/data/data.csv") |> 
  right_join(
    select(dfsub2, Participant, Mobile, starts_with(c("Feedback_","BAIT")), COPS_Frequency, SexualActivity,- Feedback_Text),
    by = "Participant"
    ) |> 
    datawizard::rescale(select= c("Arousal", "Enticing", "Valence"), range=c(0, 6), to=c(0,1)) |> 
  datawizard::rescale(select= c("Realness"), range=c(-3,3), to=c(0,1)) |>
  mutate(Condition = case_when(
    Condition == "Fiction" ~ "AI-Generated",
    Condition == "Reality" ~ "Photograph"
  )) |>
  mutate(Condition = fct_relevel(Condition, "Photograph", "AI-Generated"),
         Gender =  fct_relevel(Gender, "Male", "Female"),
         SexualOrientation = fct_relevel(SexualOrientation, "Heterosexual", "Homosexual", "Bisexual"),
         PornFrequency = as.numeric(as.factor(COPS_Frequency)),
         SexualActivity_num = as.numeric(as.factor(SexualActivity)),
         ConditionBelief = case_when(
           Condition == "Photograph" & Realness > 0.5 ~ "True",
           Condition == "AI-Generated" & Realness < 0.5 ~ "True",
           .default = "False",
         )) |>
  rename(AllRealConfidence = "Feedback_AllRealConfidence",
         AllFakeConfidence = "Feedback_AllFakeConfidence",
         Enjoyment = "Feedback_Enjoyment"
         )|>
  mutate(across(starts_with("Feedback_"), as.factor)) |>
  mutate(ConditionBelief = as.factor(ConditionBelief)) |>
  mutate(StimuliType = case_when(
    grepl("couple", Stimulus, ignore.case = TRUE) ~ "Couple",
    TRUE ~ "Individual")) |>
  mutate(StimuliType = fct_relevel(StimuliType, "Individual", "Couple"))
```


## Manipulation Checks

### Distributions

```{r Arousal1}
#| fig-width: 12
arousal_dist1 <- df1 |>
  ggplot(aes(x=Arousal, fill = Condition)) +
  geom_histogram(position = "identity", alpha = 0.4, colour = "black", bins = 20) +
  scale_x_continuous(breaks = c(0, 1)) +
  labs(title = "Arousal Study 1", ) +
  facet_wrap(~Gender) +
   scale_fill_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336")) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face="bold"))


arousal_dist1
```

```{r Arousal2}
#| fig-width: 12
arousal_dist2 <- df2 |>
  ggplot(aes(x=Arousal, fill = Condition)) +
  geom_bar(position = "identity", alpha = 0.5, line = "black") +
  scale_y_sqrt(expand = c(0, 0)) +
  scale_x_continuous(breaks = c(0, 1)) +
  labs(title = "Arousal Study 2", ) +
  facet_wrap(~Gender) +
   scale_fill_manual(values=c("Photograph"="#F44336", "AI-Generated"="#2196F3")) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face="bold"))

arousal_dist2
```

### Rate Belief

```{r ratebelief}

rate1 <- table(df1$Feedback_LabelsIncorrect)["True"] / sum(table(df1$Feedback_LabelsIncorrect))
rate2 <- table(df2$Feedback_AllReal)["True"] / sum(table(df2$Feedback_AllReal))

```

The rate of people that did not believe the instructions in study 1 (i.e., gave feedback that the labels were incorrect) was `r round(mean(rate1) * 100, 1)`% while in study 2 (i.e., gave feedback that all images were real images) was `r round(mean(rate2) * 100, 1)`%. 

### Average Arousal 

#### Study 1 

```{r meanarousal 1}
#| message: false

dfsub1 <- dfsub1 |>
  right_join(
    df1 |>
      group_by(Participant, Condition) |>
      summarise(mean_arousal = mean(Arousal, na.rm = TRUE), .groups = "drop") |>
      pivot_wider(
        names_from = Condition,
        names_prefix = "mean_Arousal_",
        values_from = mean_arousal
      ) |>
      mutate(diff_arousal = `mean_Arousal_AI-Generated` - mean_Arousal_Photograph)
  )

ttest1 <- stats::t.test(diff_arousal ~ Feedback_AILessArousing, data = dfsub1)
```

```{r}
diff_plot1 <- dfsub1 |> 
  ggplot(aes(x = Feedback_AILessArousing, y = diff_arousal, fill = Feedback_AILessArousing)) +
  geom_boxplot(width = 0.4,alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.1, size = 1) +
  stat_summary(fun = mean, geom = "point", shape = 23, size = 2, fill = "black") +
  labs(
    title = "Study 1",
    x = "Participant said AI is less arousing",
    y = "Arousal Difference (AI - Photo)"
  ) +
  scale_fill_manual(values = c("True" = "#FF9800", "False" = "#E91E63")) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    legend.position = "none"
  )

diff_plot1
```

`r report(ttest1, data = dfsub1)`

#### Study 2 
```{r meanarousal 2}
#| message: false

dfsub2 <- dfsub2 |>
  right_join(
    df2|>
      group_by(Participant, Condition)|>
      summarise(mean_arousal = mean(Arousal, na.rm = TRUE), .groups = "drop") |>
      pivot_wider(names_from = Condition, 
                  names_prefix = "mean_Arousal_", 
                  values_from = mean_arousal) |>
      mutate(diff_arousal = `mean_Arousal_AI-Generated` - mean_Arousal_Photograph)
    )

ttest2 <- stats::t.test(diff_arousal ~ Feedback_AILessArousing, data = dfsub2)
```

```{r}
diff_plot2 <- dfsub2 |> 
  ggplot(aes(x = Feedback_AILessArousing, y = diff_arousal, fill = Feedback_AILessArousing)) +
  geom_boxplot(width = 0.4, alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.1, size = 1) +
  stat_summary(fun = mean, geom = "point", shape = 23, size = 2, fill = "black") +
  labs(
    title = "Study 2",
    x = "Participant said AI is less arousing",
    y = "Arousal Difference (AI - Photo)"
  ) +
  scale_fill_manual(values = c("True" = "#FF9800", "False" = "#E91E63")) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    legend.position = "none"
  )

diff_plot2
```

`r report(ttest2, data = dfsub1)`

## Effect of Manipulation

*Note*. Models for study 1 only include the conditions which were relevant to the participants secual orientation (e.g., seeing images of men as a heterosexual woman). 

```{r}

tbl_results <-   function(model1,                                         title_table = "Fixed Effects: Study 1"){      
                            
  # ---- Fixed effects table ----
  tbl <- parameters::parameters(model1) |>
    as.data.frame() |>
    select(-Effects, -Group, -Component, -df_error, -CI) |>
    gt() |>
    # tab_header(title = title_table, subtitle = subtitle_table) |>
    fmt_number(columns = c("Coefficient", "SE", "CI_low", "CI_high", "z", "p"), decimals = 2) |>
    cols_label(
      Parameter = "Predictor",
      Coefficient = "Î²",
      SE = "SE",
      CI_low = "CI (lower)",
      CI_high = "CI (upper)",
      z = "z-value",
      p = "p"
    ) |>
    cols_merge(columns = c("CI_low", "CI_high"), pattern = "{1}, {2}") |>
    cols_label(`CI_low` = "95% CI") |>
    tab_style(
      style = cell_text(weight = "bold"),
      locations = cells_column_labels(everything())
    ) |>
    opt_table_lines()
  
    return(tbl)
}

```

```{r}
make_model_plot <- function(model1, model2 = NULL, 
                            title = "Estimated Marginal Means") {
  
    pred_df <- rbind(
      modelbased::estimate_means(model1, by = c("Gender", "Relevance", "Condition", "ConditionBelief"), backend = "emmeans")  |>
        filter(Relevance == "Relevant") |>
        select(-Relevance) |>
        mutate(Sample = "Study 1")|>
      as.data.frame(), 
      modelbased::estimate_means(model2, by = c("Gender","Condition", "ConditionBelief"), backend = "emmeans")|>
        mutate(Sample = "Study 2") |>
        as.data.frame()) 
    
    plt <- pred_df |>
      ggplot(aes(x = ConditionBelief,y = Proportion, color = Condition,linetype = Sample, group = interaction(Sample, Condition))) +
      geom_line(size = 1) +
      geom_point(size = 2) +
      geom_errorbar(aes(ymin = CI_low, ymax = CI_high),width = 0.1) +
      facet_wrap(~ Gender) +
      scale_color_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336")) +
      theme_minimal(base_size = 14) +
        labs(x = "Whether the original labels were believed to be true",y = "Estimated Proportion",color = "Images presented as:",linetype = "Sample", title = "Enticement") +
      theme(
            axis.text.y = element_text(size = 8),
            strip.placement = "outside",
            strip.background.x = element_rect(fill=c("lightgrey"), color=NA),
            strip.text.x = element_text(size = 10),
            strip.text.y = element_text(size = 10),
            axis.text.x = element_text(face = "bold", size=9, color="black"),
            legend.text = element_text(size = 10),
            legend.position =  )
    
    return(plt)
}

```

### Arousal 

```{r}
arousal1 <- readRDS("models/ModelArousal_1.rds")
arousal2 <- readRDS("models/ModelArousal_2.rds")
```

```{r}

tbl_a1 <- tbl_results(arousal1, title = "Fixed Effects: Arousal Study 1")
tbl_a2 <- tbl_results(arousal2, title = "Fixed Effects: Arousal Study 2")

``` 

```{r}

plt_a <- make_model_plot(arousal1, arousal2,
                title = "Arousal for Relevant Stimuli")
```

### Enticement

```{r}
enticement1 <- readRDS("models/ModelEnticement_1.rds")
enticement2 <- readRDS("models/ModelEnticement_2.rds")
```

```{r}

tbl_e1 <- tbl_results(enticement1, title = "Fixed Effects: Enticement Study 1")
tbl_e2 <- tbl_results(enticement2, title = "Fixed Effects: Enticement Study 2")

``` 

```{r}

plt_e <- make_model_plot(enticement1, enticement2,
                title = "Enticement for Relevant Stimuli")
```

### Valence

```{r}
valence1 <- readRDS("models/ModelValence_1.rds")
valence2 <- readRDS("models/ModelValence_2.rds")
```

```{r}

tbl_v1 <- tbl_results(valence1, title = "Fixed Effects: Valence Study 1")
tbl_v2 <- tbl_results(valence2, title = "Fixed Effects: Valence Study 2")

``` 

```{r}

plt_v <- make_model_plot(valence1, valence2,
                title = "Valence for Relevant Stimuli")
```

## Interindividual Variability and Moderators

1. extract random effects
2. make plot of participant effects
3. effect of condition believed + relevant 
4. correlation matrix/ matrix of scatter plots

```{r}

```



