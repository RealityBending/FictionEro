---
title: "FictionEro - Analysis (1)"
editor: source
editor_options: 
  chunk_output_type: console
format:
  html:
    code-fold: true
    self-contained: true
    toc: true
---

## Data Preparation

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(easystats)
library(patchwork)
library(ggside)
library(glmmTMB)
```


```{r}
dfsub <- read.csv("../data/data_participants.csv")
df <- read.csv("../data/data.csv") |> 
  datawizard::rescale(select=c("Arousal", "Enticement", "Realness"), range=c(0, 1), to=c(0.001, 0.999)) |> 
  datawizard::rescale(select=c("Valence"), range=c(-1, 1), to=c(0.001, 0.999)) |> 
  mutate(Condition = fct_relevel(Condition, "Photograph", "AI-Generated"),
         Relevance =  fct_relevel(Relevance, "Relevant", "Irrelevant", "Non-erotic")) 

results_table <- function(model, effects="fixed") {
  display(parameters::parameters(model, effects=effects))
}
```

## Manipulation Check

### Neutral vs. Emotional

```{r}
prior_intercept <- rstanarm::default_prior_intercept(mgcv::betar)
prior_intercept$default <- FALSE
prior_intercept$location <- 0.90
prior_intercept$scale <- 0.30
prior_intercept$autoscale <- FALSE
m <- rstanarm::stan_glmer(Arousal ~ Relevance + (1|Participant) + (1|Item), data=df, family=mgcv::betar, 
                          algorithm = "sampling", 
                          prior_intercept = prior_intercept)
results_table(m)

marginaleffects::predictions(m, by="Relevance", newdata = "marginalmeans") |> 
  as.data.frame()

m <- glmmTMB::glmmTMB(Arousal ~ Relevance + (1|Participant) + (1|Item), data=df, family=beta_family(link = "logit"))
results_table(m)

marginaleffects::predictions(m, 
                             newdata = insight::get_datagrid(m), 
                             vcov=vcov(m)$cond)
```


## Arousal

```{r}
plot_descriptive <- function(df, target="Arousal") {
  # By item
  p1 <- df |> 
    mutate(.average = mean(.data[[target]]), .by="Item") |>
    mutate(Item = fct_reorder(Item, .average)) |>
    ggplot(aes(y = Item, x=.data[[target]])) +
    ggdist::stat_slabinterval(aes(fill=Condition, color=Condition), .width=0.95) +
    scale_color_manual(values=c("AI-Generated"="#F44336", "Photograph"="#2196F3")) +
    scale_fill_manual(values=c("AI-Generated"="#F44336", "Photograph"="#2196F3")) +
    theme_modern() +
    theme(panel.grid.major.y = element_line(color = "grey"),
          panel.border = element_blank(),
          axis.line.x = element_blank(),
          axis.title.y = element_blank()) +
    labs(title = paste0(target, " by Item")) +
    facet_grid(~Sex)
  
  # By participant
  p2 <- df |> 
    mutate(.average = mean(.data[[target]]), .by="Participant") |>
    mutate(Participant = fct_reorder(Participant, .average)) |>
    ggplot(aes(y = Participant, x=.data[[target]])) +
    ggdist::stat_slabinterval(aes(fill=Condition, color=Condition), 
                              .width=0.95, slab_alpha=0.6, density="histogram", normalize="xy") +
    scale_color_manual(values=c("AI-Generated"="#F44336", "Photograph"="#2196F3")) +
    scale_fill_manual(values=c("AI-Generated"="#F44336", "Photograph"="#2196F3")) +
    theme_modern() +
    theme(panel.grid.major.y = element_line(color = "grey"),
          panel.border = element_blank(),
          axis.line.x = element_blank(),
          axis.title.y = element_blank()) +
    labs(title = paste0(target, " by Participant")) +
    facet_wrap(~Sex, ncol=2, scales="free_y")
  
  p1 / p2
}

plot_descriptive(df, "Arousal")

m <- glmmTMB::glmmTMB(Arousal ~ Relevance / Condition + (1|Participant) + (1|Item), data=df, family=beta_family(link = "logit"))
results_table(m)
m <- glmmTMB::glmmTMB(Valence ~ Relevance / Condition + (1|Participant) + (1|Item), data=df, family=beta_family(link = "logit"))
results_table(m)
m <- glmmTMB::glmmTMB(Enticement ~ Relevance / Condition + (1|Participant) + (1|Item), data=df, family=beta_family(link = "logit"))
results_table(m)
m <- glmmTMB::glmmTMB(Realness ~ Relevance / Condition + (1|Participant) + (1|Item), data=df, family=beta_family(link = "logit"))
results_table(m)
```


```{r}
ggplot(df, aes(x=Norms_Arousal, y=Arousal, color=Condition)) +
  geom_point() +
  geom_smooth() +
  facet_grid(~Sex)
```


## Realness

```{r}
m <- glmmTMB::glmmTMB(Realness ~ Entropy + Complexity + Contrast + Luminance + (1|Participant) + (1|Item), data=df, family=beta_family(link = "logit"))
m <- glmmTMB::glmmTMB(Realness ~ Entropy + Complexity + Contrast + Luminance + (1|Participant) + (1|Item), data=df)
results_table(m)
```


