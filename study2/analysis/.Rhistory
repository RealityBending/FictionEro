#| fig-height: 12
#| fig-width: 7
valence_desc <- plot_descriptive(df, "Valence")
valence_desc
m_valence <- glmmTMB::glmmTMB(Valence ~ Gender / Condition +
(1| Participant) + (1|Stimulus),
data=df, family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
results_table(m_valence)
marginaleffects::avg_slopes(m_valence, variables="Condition", by="Gender", re.form=NA)
for(m in c("BAIT_Visual", "BAIT_Text", "BAIT_ExpertAI",
"BAIT_Positive", "BAIT_Negative", "PornFrequency", "SexualActivity_num")) {
moderator_results <- rbind(moderator_results,
test_moderator(df, "Valence", m))
}
display(filter(moderator_results, Outcome == "Valence"))
pca <- principal_components(df[c("Valence", "Arousal", "Enticing")], n = 2)
pca
df$Emotionality <- normalize(predict(pca)$PC1)
emotionality <- df |>
mutate(Emotionality_Extreme = ifelse(Emotionality %in% c(0, 1), "Extreme", "Not extreme")) |>
ggplot(aes(x=Emotionality, fill = Gender)) +
geom_histogram(aes(color=Emotionality_Extreme), position = "identity", bins=80) +
facet_grid(~Gender, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Female"="#48c9b0", "Male"="#FF9800"), guide="none") +
scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Emotionality") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
emotionality
df$Emotionality <- normalize(predict(pca)$PC1)
emotionality <- df |>
mutate(Emotionality_Extreme = ifelse(Emotionality %in% c(0, 1), "Extreme", "Not extreme")) |>
ggplot(aes(x=Emotionality, fill = Gender)) +
geom_histogram(aes(color=Emotionality_Extreme), position = "identity", bins=80) +
facet_grid(~Gender, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Male"="#E91E63", "Male"="#FF9800"), guide="none") +
scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Emotionality") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
emotionality
df$Emotionality <- normalize(predict(pca)$PC1)
emotionality <- df |>
mutate(Emotionality_Extreme = ifelse(Emotionality %in% c(0, 1), "Extreme", "Not extreme")) |>
ggplot(aes(x=Emotionality, fill = Gender)) +
geom_histogram(aes(color=Emotionality_Extreme), position = "identity", bins=80) +
facet_grid(~Gender, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Emotionality") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
emotionality
emotionality_desc <- plot_descriptive(df, "Emotionality")
emotionality_desc
m <- glmmTMB::glmmTMB(Emotionality ~ Gender /Condition + (1| Participant) + (1|Stimulus),
data=df, family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
results_table(m)
for(m in c("BAIT_Visual", "BAIT_Text", "BAIT_ExpertAI",
"BAIT_Positive", "BAIT_Negative", "PornFrequency", "SexualActivity_num")) {
moderator_results <- rbind(moderator_results,
test_moderator(df, "Emotionality", m))
}
display(filter(moderator_results, Outcome == "Emotionality"))
results_table(m_arousal)
results_table(m_valence)
results_table(m_enticement)
display(moderator_results)
display(moderator_results)
test_moderator <- function(df, outcome="Arousal", moderator="BAIT_Visual") {
f <- paste0(outcome, " ~ Gender / (Condition * ", moderator, ") + (Condition | Participant) + (1|Stimulus)")
r <- glmmTMB::glmmTMB(as.formula(f),
data = df,
family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8)) |>
parameters::parameters() |>
as.data.frame() |>
select(-df_error, -Effects, -Group, -Component, -SE)
r$Moderator <- moderator
r$Outcome <- outcome
insight::format_table(r[c(7, 8), ])
}
moderator_results <- data.frame()
for(m in c("BAIT_Visual", "BAIT_Text", "BAIT_ExpertAI", "BAIT_Positive", "BAIT_Negative", "PornFrequency", "SexualActivity_num")) {
moderator_results <- rbind(moderator_results,
test_moderator(df, "Arousal", m))
}
display(moderator_results)
display(filter(moderator_results, Outcome == "Enticement"))
for(m in c("BAIT_Visual", "BAIT_Text", "BAIT_ExpertAI",
"BAIT_Positive", "BAIT_Negative",
"PornFrequency", "SexualActivity")) {
moderator_results <- rbind(moderator_results,
test_moderator(df, "Enticing", m))
}
display(filter(moderator_results, Outcome == "Enticing"))
for(m in c("BAIT_Visual", "BAIT_Text", "BAIT_ExpertAI",
"BAIT_Positive", "BAIT_Negative", "PornFrequency", "SexualActivity_num")) {
moderator_results <- rbind(moderator_results,
test_moderator(df, "Valence", m))
}
display(filter(moderator_results, Outcome == "Valence"))
feedback_results <- data.frame()
for(m in c("Feedback_NoFacesAttractive", "Feedback_SomeFacesAttractive",
"Feedback_AIMoreAttractive", "Feedback_AILessAttractive",
"Feedback_AIMoreArousing", "Feedback_AILessArousing",
"Feedback_DiffObvious", "Feedback_DiffNone",
"Feedback_LabelsIncorrect", "Feedback_LabelsReversed",
"Feedback_AllReal", "Feedback_AllFake",
"AllRealConfidence","AllFakeConfidence" ,
"Enjoyment")) {
feedback_results <- rbind(feedback_results,
test_moderator(df, "Arousal", m))
}
display(feedback_results)
feedback_results <- data.frame()
for(m in c("Feedback_NoFacesAttractive", "Feedback_SomeFacesAttractive",
"Feedback_AIMoreAttractive", "Feedback_AILessAttractive",
"Feedback_AIMoreArousing", "Feedback_AILessArousing",
"Feedback_DiffObvious", "Feedback_DiffNone",
"Feedback_LabelsIncorrect", "Feedback_LabelsReversed",
"Feedback_AllReal", "Feedback_AllFake",
"AllRealConfidence","AllFakeConfidence" ,
"Enjoyment")) {
feedback_results <- rbind(feedback_results,
test_moderator(df, "Enticing", m))
}
display(feedback_results)
feedback_results <- data.frame()
for(m in c("Feedback_NoFacesAttractive", "Feedback_SomeFacesAttractive",
"Feedback_AIMoreAttractive", "Feedback_AILessAttractive",
"Feedback_AIMoreArousing", "Feedback_AILessArousing",
"Feedback_DiffObvious", "Feedback_DiffNone",
"Feedback_LabelsIncorrect", "Feedback_LabelsReversed",
"Feedback_AllReal", "Feedback_AllFake",
"AllRealConfidence","AllFakeConfidence" ,
"Enjoyment")) {
feedback_results <- rbind(feedback_results,
test_moderator(df, "Valence", m))
}
display(feedback_results)
#| message: false
#| warning: false
library(tidyverse)
library(easystats)
library(patchwork)
library(ggside)
library(glmmTMB)
options(mc.cores = parallel::detectCores(),
brms.backend = "cmdstanr",
width = 300)
df$BAIT_Videos <- (df$BAIT_VideosRealistic + (1 - df$BAIT_VideosIssues)) / 2
df$BAIT_Visual = (df$BAIT_ImagesRealistic + (1 - df$BAIT_ImagesIssues) + df$BAIT_ImitatingReality + df$BAIT_EnvironmentReal) / 4
df$BAIT_Text = (df$BAIT_TextRealistic + (1 - df$BAIT_TextIssues)) / 2
df$BAIT_Negative <- (df$BAIT_Worry + df$BAIT_Dangerous)/2
df$BAIT_Positive <- (df$BAIT_Exciting + df$BAIT_Benefit)/2
#| warning: false
df |>
mutate(ConditionBelief = as.factor(ConditionBelief)) |>
mutate(ConditionBelief = case_when(
ConditionBelief == "False" ~ "Not Believed",
ConditionBelief == "True" ~ "Believed",)) |>
mutate(Realness_Extreme = ifelse(Realness %in% c(0, 1), "Extreme", "Not extreme")) |>
ggplot(aes(x=Realness, fill = Gender)) +
geom_histogram(aes(color=Realness_Extreme), position = "identity", bins=15) +
facet_grid(Gender ~ ConditionBelief, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Female"="#FF9800", "Male"="#03A9F4"), guide="none") +
scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Realness") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
#| warning: false
make_model <- function(f, family=glmmTMB::ordbeta()) {
m <- glmmTMB::glmmTMB(as.formula(f),
data=df,
family=family,
control = glmmTMB::glmmTMBControl(parallel = 8))
print(results_table(m))
m
}
m <- make_model("Realness ~ Entropy + (1|Participant) + (1|Stimulus)", family=glmmTMB::ordbeta())
m <- make_model("RealnessBelief ~ Entropy + (1|Participant) + (1|Stimulus)", family="binomial")
df <- read.csv("../data/data.csv") |>
right_join(
select(dfsub, Participant, Mobile, starts_with(c("Feedback_", "BAIT_")), COPS_Frequency, SexualActivity,-Feedback_Text),
by = "Participant"
) |>
datawizard::rescale(select= c("Arousal", "Enticing", "Valence"), range=c(0, 6), to=c(0,1)) |>
datawizard::rescale(select= c("Realness"), range=c(-3,3), to=c(0,1)) |>
mutate(Condition = case_when(
Condition == "Fiction" ~ "AI-Generated",
Condition == "Reality" ~ "Photograph"
)) |>
mutate(Condition = fct_relevel(Condition, "Photograph", "AI-Generated"),
Gender =  fct_relevel(Gender, "Male", "Female"),
PornFrequency = as.numeric(as.factor(COPS_Frequency)),
SexualActivity_num = as.numeric(as.factor(SexualActivity)),
ConditionBelief = case_when(
Condition == "Photograph" & Realness > 0.5 ~ "True",
Condition == "AI-Generated" & Realness < 0.5 ~ "True",
.default = "False"),
RealnessBelief = ifelse(Realness > 0.5, 1, 0))
df$RealnessBelief
dfsub <- read.csv("../data/data_participants.csv")
df <- read.csv("../data/data.csv") |>
right_join(
select(dfsub, Participant, Mobile, starts_with(c("Feedback_", "BAIT_")), COPS_Frequency, SexualActivity,-Feedback_Text),
by = "Participant"
) |>
datawizard::rescale(select= c("Arousal", "Enticing", "Valence"), range=c(0, 6), to=c(0,1)) |>
datawizard::rescale(select= c("Realness"), range=c(-3,3), to=c(0,1)) |>
mutate(Condition = case_when(
Condition == "Fiction" ~ "AI-Generated",
Condition == "Reality" ~ "Photograph"
)) |>
mutate(Condition = fct_relevel(Condition, "Photograph", "AI-Generated"),
Gender =  fct_relevel(Gender, "Male", "Female"),
PornFrequency = as.numeric(as.factor(COPS_Frequency)),
SexualActivity_num = as.numeric(as.factor(SexualActivity)),
ConditionBelief = case_when(
Condition == "Photograph" & Realness > 0.5 ~ "True",
Condition == "AI-Generated" & Realness < 0.5 ~ "True",
.default = "False"),
RealnessBelief = ifelse(Realness > 0.5, 1, 0)) |>
rename(AllRealConfidence = "Feedback_AllRealConfidence",
AllFakeConfidence = "Feedback_AllFakeConfidence",
Enjoyment = "Feedback_Enjoyment"
)|>
mutate(across(starts_with("Feedback_"), as.factor))
results_table <- function(model, effects="fixed", filter=NULL) {
if("marginaleffects" %in% class(model)) {
model |>
parameters::parameters() |>
as.data.frame() |>
select(-Parameter, -SE, -S, z=Statistic, -Predicted) |>
insight::format_table() |>
parameters::display()
} else {
display(parameters::parameters(model, effects=effects, keep=filter))
}
}
df$BAIT_Videos <- (df$BAIT_VideosRealistic + (1 - df$BAIT_VideosIssues)) / 2
df$BAIT_Visual = (df$BAIT_ImagesRealistic + (1 - df$BAIT_ImagesIssues) + df$BAIT_ImitatingReality + df$BAIT_EnvironmentReal) / 4
df$BAIT_Text = (df$BAIT_TextRealistic + (1 - df$BAIT_TextIssues)) / 2
df$BAIT_Negative <- (df$BAIT_Worry + df$BAIT_Dangerous)/2
df$BAIT_Positive <- (df$BAIT_Exciting + df$BAIT_Benefit)/2
#| warning: false
make_model <- function(f, family=glmmTMB::ordbeta()) {
m <- glmmTMB::glmmTMB(as.formula(f),
data=df,
family=family,
control = glmmTMB::glmmTMBControl(parallel = 8))
print(results_table(m))
m
}
m <- make_model("Realness ~ Entropy + (1|Participant) + (1|Stimulus)", family=glmmTMB::ordbeta())
m <- make_model("RealnessBelief ~ Entropy + (1|Participant) + (1|Stimulus)", family="binomial")
m <- make_model("Realness ~ Complexity + (1|Participant) + (1|Stimulus)", family=glmmTMB::ordbeta())
m <- make_model("RealnessBelief ~ Complexity + (1|Participant) + (1|Stimulus)", family="binomial")
m <- make_model("Realness ~ Contrast + (1|Participant) + (1|Stimulus)", family=glmmTMB::ordbeta())
m <- make_model("RealnessBelief ~ Contrast + (1|Participant) + (1|Stimulus)", family="binomial")
m <- make_model("Realness ~ Luminance + (1|Participant) + (1|Stimulus)", family=glmmTMB::ordbeta())
m <- make_model("RealnessBelief ~ Luminance + (1|Participant) + (1|Stimulus)", family="binomial")
#| warning: false
m <- make_model("Realness ~ Gender / Condition +
(1|Participant) + (1|Stimulus)",
family=glmmTMB::ordbeta())
predbeta <- estimate_relation(m, length=20)
m <- make_model("RealnessBelief ~ Gender / Condition +
(1|Participant) + (1|Stimulus)",
family="binomial")
predbin <- estimate_relation(m, length=20)
predbeta |>
ggplot(aes(x=Condition, y=Predicted)) +
geom_pointrange(aes(ymin=CI_low, ymax=CI_high, color=Condition), position = position_dodge(width=0.2)) +
scale_color_manual(values=c("red", "blue"), guide="none") +
facet_grid(~Gender)
#| warning: false
test_moderator <- function(df, moderator="BAIT_Visual") {
f <- paste0("Realness ~ Gender / (Condition * ", moderator, ") + (1| Participant) + (1|Stimulus)")
r <- glmmTMB::glmmTMB(as.formula(f),
data=df,
family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8)) |>
parameters::parameters() |>
as.data.frame() |>
select(-df_error, -Effects, -Group, -Component, -SE)
r$Moderator <- moderator
insight::format_table(filter(r, str_detect(Parameter, moderator)))
}
moderator <- data.frame()
for(m in c("BAIT_Visual", "BAIT_Text", "BAIT_ExpertAI",
"BAIT_Positive", "BAIT_Negative")) {
moderator <- rbind(moderator, test_moderator(df, m))
}
display(filter(moderator, p < .05))
#| warning: false
moderator <- data.frame()
for(m in c("PornFrequency", "SexualActivity_num")) {
moderator <- rbind(moderator, test_moderator(df, m))
}
display(filter(moderator, p < .05))
#| warning: false
moderator <- data.frame()
for(m in c("Feedback_DiffObvious", "Feedback_DiffNone",
"Feedback_AIMoreArousing", "Feedback_AILessArousing",
"Feedback_NoFacesAttractive", "Feedback_SomeFacesAttractive",
"Feedback_LabelsIncorrect", "Feedback_LabelsReversed",
"Feedback_AllReal",
"Feedback_AllFake")) {
moderator <- rbind(moderator, test_moderator(df, m))
}
display(filter(moderator, p < .05))
#| warning: false
m2 <- glmmTMB::glmmTMB(Realness ~ Gender /
(Feedback_AILessArousing / Condition) +
(1 | Participant) + (1|Stimulus),
data=df,
family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
summary(m2)
stars1 <- data.frame(Gender = as.factor("Male"),
Condition = "AI-Generated",
label = "***",
x = 1.5,
y = 0.55)
pred1 <- estimate_relation(m2)
p1 <- pred1 |>
ggplot(aes(x=Feedback_AILessArousing, y=Predicted)) +
geom_line(aes(color=Condition, group=Condition), linewidth=.3, position = position_dodge(width=0.2), key_glyph = "path") +
geom_pointrange(aes(ymin=CI_low, ymax=CI_high, color=Condition), position = position_dodge(width=0.2), size=0.8, linewidth=1, key_glyph = "blank") +
# geom_text(data=stars2, aes(x=x, y=y, label=label, color=Condition), hjust=0.5, key_glyph = "blank", size=3) +
geom_text(data=stars2, aes(x=x, y=y, label=label), hjust=0.5, color="#424242", size=3) +
guides(color=guide_legend(override.aes = list(linewidth = 1.5))) +
facet_grid(~Gender) +
scale_y_continuous(labels=scales::percent) +
scale_color_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336")) +
theme_minimal() +
theme(axis.text.y = element_text(size = 8),
strip.placement = "outside",
strip.background.x = element_rect(fill=c("lightgrey"), color=NA),
strip.text.x = element_text(size = 10),
strip.text.y = element_text(size = 10),
axis.text.x = element_text(size=9, color="black"),
legend.text = element_text(size = 10)) +
labs(y="Realness\n", fill="Images presented as:", color="Images presented as:",
x = "\n'AI-Images were less arousing' Feedback",
tag = "B")
summary(m2)
#| warning: false
m2 <- glmmTMB::glmmTMB(Realness ~ Gender /
(Feedback_AILessArousing / Condition) +
(1 | Participant) + (1|Stimulus),
data=df,
family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
summary(m2)
# stars1 <- data.frame(Gender = as.factor("Male"),
#                      Condition = "AI-Generated",
#                      label = "***",
#                      x = 1.5,
#                      y = 0.55)
#
pred1 <- estimate_relation(m2)
p1 <- pred1 |>
ggplot(aes(x=Feedback_AILessArousing, y=Predicted)) +
geom_line(aes(color=Condition, group=Condition), linewidth=.3, position = position_dodge(width=0.2), key_glyph = "path") +
geom_pointrange(aes(ymin=CI_low, ymax=CI_high, color=Condition), position = position_dodge(width=0.2), size=0.8, linewidth=1, key_glyph = "blank") +
# geom_text(data=stars2, aes(x=x, y=y, label=label, color=Condition), hjust=0.5, key_glyph = "blank", size=3) +
geom_text(data=stars2, aes(x=x, y=y, label=label), hjust=0.5, color="#424242", size=3) +
guides(color=guide_legend(override.aes = list(linewidth = 1.5))) +
facet_grid(~Gender) +
scale_y_continuous(labels=scales::percent) +
scale_color_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336")) +
theme_minimal() +
theme(axis.text.y = element_text(size = 8),
strip.placement = "outside",
strip.background.x = element_rect(fill=c("lightgrey"), color=NA),
strip.text.x = element_text(size = 10),
strip.text.y = element_text(size = 10),
axis.text.x = element_text(size=9, color="black"),
legend.text = element_text(size = 10)) +
labs(y="Realness\n", fill="Images presented as:", color="Images presented as:",
x = "\n'AI-Images were less arousing' Feedback",
tag = "B")
p1 <- pred1 |>
ggplot(aes(x=Feedback_AILessArousing, y=Predicted)) +
geom_line(aes(color=Condition, group=Condition), linewidth=.3, position = position_dodge(width=0.2), key_glyph = "path") +
geom_pointrange(aes(ymin=CI_low, ymax=CI_high, color=Condition), position = position_dodge(width=0.2), size=0.8, linewidth=1, key_glyph = "blank") +
# geom_text(data=stars2, aes(x=x, y=y, label=label, color=Condition), hjust=0.5, key_glyph = "blank", size=3) +
geom_text(data=stars1, aes(x=x, y=y, label=label), hjust=0.5, color="#424242", size=3) +
guides(color=guide_legend(override.aes = list(linewidth = 1.5))) +
facet_grid(~Gender) +
scale_y_continuous(labels=scales::percent) +
scale_color_manual(values=c("AI-Generated"="#2196F3", "Photograph"="#F44336")) +
theme_minimal() +
theme(axis.text.y = element_text(size = 8),
strip.placement = "outside",
strip.background.x = element_rect(fill=c("lightgrey"), color=NA),
strip.text.x = element_text(size = 10),
strip.text.y = element_text(size = 10),
axis.text.x = element_text(size=9, color="black"),
legend.text = element_text(size = 10)) +
labs(y="Realness\n", fill="Images presented as:", color="Images presented as:",
x = "\n'AI-Images were less arousing' Feedback",
tag = "B")
p1
moderator_believed <- data.frame()
for(m in c("BAIT_Visual", "BAIT_Text", "BAIT_ExpertAI",
"BAIT_Positive", "BAIT_Negative", "PornFrequency", "SexualActivity",
"Feedback_DiffObvious", "Feedback_DiffNone",
"Feedback_AIMoreArousing", "Feedback_AILessArousing",
"Feedback_AIMoreAttractive", "Feedback_AILessArousing",
"Feedback_LabelsIncorrect", "Feedback_LabelsReversed")) {
moderator_believed <- rbind(moderator_believed,
test_moderator(filter(df, ConditionBelief == "True"), "Emotionality", m))
}
moderator_believed <- data.frame()
for(m in c("BAIT_Visual", "BAIT_Text", "BAIT_ExpertAI",
"BAIT_Positive", "BAIT_Negative", "PornFrequency", "SexualActivity",
"Feedback_DiffObvious", "Feedback_DiffNone",
"Feedback_AIMoreArousing", "Feedback_AILessArousing",
"Feedback_AIMoreAttractive", "Feedback_AILessArousing",
"Feedback_LabelsIncorrect", "Feedback_LabelsReversed")) {
moderator_believed <- rbind(moderator_believed,
test_moderator(filter(df, ConditionBelief == "True"), "Emotionality", m))
}
pca
normalize(predict(pca)$PC1)
df$Emotionality
df$Emotionality <- normalize(predict(pca)$PC1)
df$Emotionality
str(df$Emotionality)
emotionality_desc <- plot_descriptive(df, "Emotionality")
emotionality_desc
emotionality
emotionality <- df |>
mutate(Emotionality_Extreme = ifelse(Emotionality %in% c(0, 1), "Extreme", "Not extreme")) |>
ggplot(aes(x=Emotionality, fill = Gender)) +
geom_histogram(aes(color=Emotionality_Extreme), position = "identity", bins=30) +
facet_grid(~Gender, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Emotionality") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
emotionality
emotionality <- df |>
mutate(Emotionality_Extreme = ifelse(Emotionality %in% c(0, 1), "Extreme", "Not extreme")) |>
ggplot(aes(x=Emotionality, fill = Gender)) +
geom_histogram(aes(color=Emotionality_Extreme), position = "identity", bins=20) +
facet_grid(~Gender, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Emotionality") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
emotionality
str(df$Emotionality)
str(df$Valence)
m <- glmmTMB::glmmTMB(Emotionality ~ Gender /Condition + (1| Participant) + (1|Stimulus),
data=df, family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
results_table(m)
marginaleffects::avg_slopes(m, variables="Condition", by="Gender", re.form=NA)
for(m in c("BAIT_Visual", "BAIT_Text", "BAIT_ExpertAI",
"BAIT_Positive", "BAIT_Negative", "PornFrequency", "SexualActivity_num")) {
moderator_results <- rbind(moderator_results,
test_moderator(df, "Emotionality", m))
}
pca <- principal_components(df[c("Valence", "Arousal", "Enticing")], n = 2)
pca
df$Emotionality <- as.numeric(normalize(predict(pca)$PC1))
emotionality <- df |>
mutate(Emotionality_Extreme = ifelse(Emotionality %in% c(0, 1), "Extreme", "Not extreme")) |>
ggplot(aes(x=Emotionality, fill = Gender)) +
geom_histogram(aes(color=Emotionality_Extreme), position = "identity", bins=20) +
facet_grid(~Gender, scales="free_y") +
scale_color_manual(values=c("red", "white"), guide="none") +
scale_fill_manual(values=c("Male"="#E91E63", "Female"="#FF9800"), guide="none") +
scale_y_sqrt(expand = c(0, 0)) +
labs(title = "Emotionality") +
theme_abyss() +
theme(plot.title = element_text(hjust = 0.5, face="bold"))
emotionality
emotionality_desc <- plot_descriptive(df, "Emotionality")
emotionality_desc
m <- glmmTMB::glmmTMB(Emotionality ~ Gender /Condition + (1| Participant) + (1|Stimulus),
data=df, family=glmmTMB::ordbeta(),
control = glmmTMB::glmmTMBControl(parallel = 8))
results_table(m)
marginaleffects::avg_slopes(m, variables="Condition", by="Gender", re.form=NA)
for(m in c("BAIT_Visual", "BAIT_Text", "BAIT_ExpertAI",
"BAIT_Positive", "BAIT_Negative", "PornFrequency", "SexualActivity_num")) {
moderator_results <- rbind(moderator_results,
test_moderator(df, "Emotionality", m))
}
for(m in c("BAIT_Visual", "BAIT_Text", "BAIT_ExpertAI",
"BAIT_Positive", "BAIT_Negative", "PornFrequency", "SexualActivity_num")) {
moderator_results <- rbind(moderator_results,
test_moderator(df, "Valence", m))
}
display(filter(moderator_results, Outcome == "Valence"))
display(filter(moderator_results, Outcome == "Emotionality"))
